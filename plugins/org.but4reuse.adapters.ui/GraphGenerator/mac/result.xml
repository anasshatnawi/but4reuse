<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Stats>
    <AdaptersName>
        <node name="Java Understanding">
            <node name="IgnorePath" value="false"/>
            <node name="Mode" value="METHODS">
                <node name="Compare names of methods" value="SAME"/>
                <node name="Bodies similarity pourcentage accurency" value="100%"/>
                <node name="Compare bodies of methods" value="IGNORE"/>
                <node name="Bodies comparison's method" value="NOT_ORDER_SENSITIVE"/>
                <node name="Compare parameters of methods" value="DIFFERENT"/>
                <node name="Compare return type of methods" value="IGNORE"/>
                <node name="Compare modifiers of methods" value="IGNORE"/>
            </node>
        </node>
    </AdaptersName>
    <StatReuse>
        <node levelofreuse="100.0" name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot">
            <node name="Reused elements" number="514">
                <node levelofreuse="99.61089494163424" name="ApoMarc">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:ApoBotApplet(| int,int) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:ApoBotComponent(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelLoad(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelSave() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurLevel(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIButtonEmpty() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIPlayer(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getILevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackgroundOriginal() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackgroundOriginal(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:makeBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:centerCamera() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getITile() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setITile(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelWidth(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelHeight(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getImage() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurX(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurY(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:restart() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:think(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderLevel(Graphics2D,BufferedImage,ApoBotLevel| Graphics2D,BufferedImage,ApoBotLevel,boolean) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderPlayer(Graphics2D,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderOvertile(Graphics2D,int,int,int,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderTile(Graphics2D,int,int,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:ApoBotImage() "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImage(String,boolean) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:drawString(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getLogo(int,int,BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getIBackground(BufferedImage,int,int,int,int,int| ApoBotLevel,BufferedImage,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonImage(int,int,String,Color,Color,Color,Color,Color,Font| int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImageCopy(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:main(String[]) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:ApoBotMain(String) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:init() "/>
                    <element element=" Class: apoBot.ApoBotMain Method:windowClosing(WindowEvent) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:ApoBotEntity(int,float,float,float,float) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:getCommand() "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:setCommand(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:ApoBotPlayer(BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:init() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBUp() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBUp(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBJump() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBJump(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunX() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunX(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunY() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunY(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBRun() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBRun(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getStartDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setStartDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:think(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:ApoBotButton(ApoBotComponent) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:ApoBotEditor(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevels() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getCurTile() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:setCurTile(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseClick(int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:renderEditor(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:ApoBotGame(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:addLevelToIO(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMenu() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setGame() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setTutorial() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setEditor() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevelChange(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:reset() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:restart() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:getNextCommand() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:stopGo() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:isLevelWin() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:thinkMove(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextCommand(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerRun() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerJump() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:render(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderFPS(Graphics2D,float) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMenu(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMouseImage(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderWin(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:ApoBotTutorial(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:canGo() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:keyPressed(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:nextStep() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:renderMenuTutorial(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawArrow(Graphics2D,int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawSpeech(Graphics2D,String) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:ApoBotLevel(| int,int| ApoBotLevelLevel[][],Point,int,int[]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getCommandsMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setCommandsMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsOneMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsOneMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsTwoMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsTwoMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setLevel(ApoBotLevelLevel[][]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getStartPoint() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setStartPoint(Point) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getDirectionView() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setDirectionView(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:ApoBotLevelIO() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevels() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:setLevels(ArrayList&lt;ApoBotLevel&gt;) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:addLevel(ApoBotLevel,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:changeLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:removeLevel(ApoBotLevel| int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:readLevel(DataInputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:writeLevel(DataOutputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:ApoBotLevelLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:ApoBotLevelTest() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:makeLevelOne() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getMenuLevel() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:ApoApplet(int,int) "/>
                    <element element=" Class: org.apogames.ApoApplet Method:init() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:ApoAppletBufferedStrategy(int,int) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:ApoComponent(boolean,boolean,int| boolean,boolean,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:ApoComponentBufferedStrategy(boolean,boolean,int| boolean,boolean,int,int| boolean,boolean,int,int,boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getWAIT_TIME_RENDER() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setWAIT_TIME_RENDER(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:render(Graphics2D| ) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:createBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:checkBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoIO Method:ApoIO(| String,String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getLevelName() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setLevelName(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getFileEnding() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setFileEnding(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getCurrentLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setCurrentLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getMaxLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setMaxLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:hasNextLevel(| boolean) "/>
                    <element element=" Class: org.apogames.ApoMain Method:ApoMain(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMain Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMain Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoMain Method:init() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:ApoMainBufferedStrategy(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:ApoNewThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoStart Method:ApoStart() "/>
                    <element element=" Class: org.apogames.ApoStart Method:main(String[]) "/>
                    <element element=" Class: org.apogames.ApoThread Method:ApoThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:ApoTimer(ApoTimerInterface,long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:start() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:stop() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:run() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loopSound(String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:stopLoopingSound() "/>
                </node>
                <node levelofreuse="99.22178988326849" name="ApoIcarus">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:ApoBotApplet(| int,int) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:ApoBotComponent(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelLoad(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelSave() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurLevel(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIButtonEmpty() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIPlayer(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getILevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackgroundOriginal() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackgroundOriginal(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:makeBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:centerCamera() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getITile() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setITile(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelWidth(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelHeight(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getImage() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurX(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurY(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:restart() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:think(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderLevel(Graphics2D,BufferedImage,ApoBotLevel| Graphics2D,BufferedImage,ApoBotLevel,boolean) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderPlayer(Graphics2D,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderOvertile(Graphics2D,int,int,int,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderTile(Graphics2D,int,int,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:ApoBotImage() "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImage(String,boolean) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:drawString(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getLogo(int,int,BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getIBackground(BufferedImage,int,int,int,int,int| ApoBotLevel,BufferedImage,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonImage(int,int,String,Color,Color,Color,Color,Color,Font| int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImageCopy(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:main(String[]) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:ApoBotMain(String) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:init() "/>
                    <element element=" Class: apoBot.ApoBotMain Method:windowClosing(WindowEvent) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:ApoBotEntity(int,float,float,float,float) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:getCommand() "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:setCommand(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:ApoBotPlayer(BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:init() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBUp() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBUp(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBJump() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBJump(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunX() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunX(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunY() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunY(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBRun() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBRun(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getStartDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setStartDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:think(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:ApoBotButton(ApoBotComponent) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:ApoBotEditor(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevels() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getCurTile() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:setCurTile(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseClick(int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:renderEditor(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:ApoBotGame(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:addLevelToIO(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMenu() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setGame() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setTutorial() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setEditor() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevelChange(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:reset() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:restart() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:getNextCommand() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:stopGo() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:isLevelWin() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:thinkMove(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextCommand(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerRun() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerJump() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:render(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderFPS(Graphics2D,float) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMenu(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMouseImage(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderWin(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:ApoBotTutorial(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:canGo() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:keyPressed(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:nextStep() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:renderMenuTutorial(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawArrow(Graphics2D,int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawSpeech(Graphics2D,String) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:ApoBotLevel(| int,int| ApoBotLevelLevel[][],Point,int,int[]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getCommandsMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setCommandsMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsOneMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsOneMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsTwoMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsTwoMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setLevel(ApoBotLevelLevel[][]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getStartPoint() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setStartPoint(Point) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getDirectionView() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setDirectionView(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:ApoBotLevelIO() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevels() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:setLevels(ArrayList&lt;ApoBotLevel&gt;) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:addLevel(ApoBotLevel,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:changeLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:removeLevel(ApoBotLevel| int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:readLevel(DataInputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:writeLevel(DataOutputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:ApoBotLevelLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:ApoBotLevelTest() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:makeLevelOne() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getMenuLevel() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:ApoApplet(int,int) "/>
                    <element element=" Class: org.apogames.ApoApplet Method:init() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:ApoAppletBufferedStrategy(int,int) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:ApoComponent(boolean,boolean,int| boolean,boolean,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:ApoComponentBufferedStrategy(boolean,boolean,int| boolean,boolean,int,int| boolean,boolean,int,int,boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getWAIT_TIME_RENDER() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setWAIT_TIME_RENDER(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:render(Graphics2D| ) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:createBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:checkBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoIO Method:ApoIO(| String,String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getLevelName() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setLevelName(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getFileEnding() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setFileEnding(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getCurrentLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setCurrentLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getMaxLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setMaxLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:hasNextLevel(| boolean) "/>
                    <element element=" Class: org.apogames.ApoMain Method:ApoMain(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMain Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMain Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoMain Method:init() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:ApoMainBufferedStrategy(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:ApoNewThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoStart Method:ApoStart() "/>
                    <element element=" Class: org.apogames.ApoStart Method:main(String[]) "/>
                    <element element=" Class: org.apogames.ApoThread Method:ApoThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:ApoTimer(ApoTimerInterface,long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:start() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:stop() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:run() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loopSound(String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:stopLoopingSound() "/>
                </node>
                <node levelofreuse="2.9182879377431905" name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String| BufferedImage,int,int,int,int,String,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int| Graphics2D| Graphics) "/>
                </node>
            </node>
            <node name="Unique elements" number="0"/>
        </node>
        <node levelofreuse="100.0" name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando">
            <node name="Reused elements" number="863">
                <node levelofreuse="1.7381228273464657" name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String| BufferedImage,int,int,int,int,String,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int| Graphics2D| Graphics) "/>
                </node>
                <node levelofreuse="99.76825028968713" name="ApoMarc">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCopy(boolean[]| byte[][]| int[][]) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequence(String| InputStream) "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:start(| boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequence(String| InputStream) "/>
                    <element element=" Class: apoCommando.ApoMarioApplet Method:ApoMarioApplet() "/>
                    <element element=" Class: apoCommando.ApoMarioApplet Method:stop() "/>
                    <element element=" Class: apoCommando.ApoMarioApplet Method:destroy() "/>
                    <element element=" Class: apoCommando.ApoMarioApplet Method:init() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:ApoMarioGameComponent(ApoScreen) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:load() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getChangeX() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setChangeX(float) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getChangeY() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setChangeY(float) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:isBPause() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setBPause(boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getResizeImage(BufferedImage) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getLevel() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setLevel(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:isShowFPS() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setShowFPS(boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getButtons() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getImages() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getFPS() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:update(long) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:think(long) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:keyPressed(int,char) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:keyReleased(int,char) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:mouseDragged(int,int,boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:mousePressed(int,int,boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:mouseReleased(int,int,boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: apoCommando.ApoMarioImageContainer Method:init(ApoMarioGameComponent) "/>
                    <element element=" Class: apoCommando.ApoMarioImageContainer Method:setTileSet(int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:ApoMarioImages() "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getImage(String,boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getBackgroundBack(BufferedImage,int,int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getBackgroundFront(BufferedImage,int,int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:drawBackground(Graphics2D,BufferedImage,int,int,int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getLogo(BufferedImage) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font,int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getButtonWithImage(int,int,BufferedImage,String,Color,Color,Color| int,int,BufferedImage,String,Color,Color,Color,Font) "/>
                    <element element=" Class: apoCommando.ApoMarioMain Method:main(String[]) "/>
                    <element element=" Class: apoCommando.ApoMarioMain Method:ApoMarioMain() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:ApoMarioCannon(BufferedImage,BufferedImage,float,float,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:getCannons() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:thinkCanon(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:makeCannon(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:ApoMarioCannonCannon(BufferedImage,float,float,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:ApoMarioCoin(BufferedImage,BufferedImage,float,float,int,long,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:getCurY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:setCurY(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:setBVisible(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoinParticle Method:ApoMarioCoinParticle(BufferedImage,BufferedImage,float,float,int,long) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoinParticle Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoinParticle Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:ApoMarioDestructableWall(BufferedImage,BufferedImage,float,float,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:getParticle() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:isBWall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:makeParticle() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:damageWall(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:ApoMarioEnd(float,float,float,float,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:hitTheBar(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:ApoMarioEnemy(BufferedImage,float,float,float,float,int,long,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setChangeY(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBImmortal() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBImmortal(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBDie() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBDie(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBFall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBFall(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBFlyOriginal() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBFlyOriginal(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getPoints() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setPoints(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBFly() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBFly(boolean| boolean,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getMirrorImage(BufferedImage) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:die(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:thinkJump(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:thinkSpeedAndMoveEnemy(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:nextYCheck(int,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:downCheck() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:ApoMarioEntity(BufferedImage,float,float,float,float,int,long,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getId() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getDirection() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:changeDirection() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:setDirection(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getLevel() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:setLevel(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:yDownCheckEntity(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:nextYCheck(int,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:thinkCollision(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:xChange(ApoMarioLevel,int,int,Rectangle2D.Float,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:makeParticles(float,float,float,float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getMinMax(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:renderImage(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:ApoMarioFireball(BufferedImage,float,float,int,long,boolean,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:setVelocityX(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:checkWall(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:intersectsWithEnemy(ApoMarioEnemy,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:nextYCheck(int,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:downCheck() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:ApoMarioFlower(BufferedImage,float,float,float,float,int,long,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:getMyChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieFireflower Method:ApoMarioGoodieFireflower(BufferedImage,float,float,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieFireflower Method:catchMe(ApoMarioPlayer) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:ApoMarioGoodieMushroom(BufferedImage,float,float,boolean,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:catchMe(ApoMarioPlayer) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:ApoMarioGumba(BufferedImage,float,float,float,float,int,long,boolean,boolean,boolean,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:isBLeft() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:setVelocityX(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:ApoMarioKoopa(BufferedImage,float,float,float,float,int,long,boolean,boolean,boolean,boolean,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:die(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:ApoMarioParticle(BufferedImage,float,float,int,long) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:think(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:ApoMarioPlayer(float,float,float,float,int,long,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getTeamName() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getAuthor() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setTeamName(String) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setAuthor(String) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:addMessage(String) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBDie() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getCoins() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setCoins(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getPoints() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setPoints(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getAi() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setAi(String) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getDamageTime() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setDamageTime(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:damagePlayer() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:catchMushroom() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:catchFireflower() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getType() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setType(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:playerDie() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBGodMode() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setBGodMode(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getGoalVecX() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setGoalVecX(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getLevelX() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getLevelY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBSpeed() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getPlayer() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setBSpeed(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:addFireBall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBDown() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setBDown(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:canStandUp(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBJump() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setBJump(boolean,boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBEnemyJump() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setEnemyJump() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getFireballs() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:thinkAI(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:thinkSpeedAndMovePlayer(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:yDownCheckEntity(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:test(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:testNewY(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:ApoMarioQuestionmark(BufferedImage,BufferedImage,float,float,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:damageWall(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:isBWall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:ApoMarioShell(BufferedImage,float,float,float,float,int,long,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:getPlayer() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:setPlayer(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:thinkJump(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:damageCheck(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:intersectsWithEnemy(ApoMarioEnemy,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:ApoMarioWall(BufferedImage,float,float,int| BufferedImage,float,float,boolean,int| BufferedImage,float,float,float,float,boolean,int| BufferedImage,float,float,float,float,int,int,boolean,int| BufferedImage,float,float,float,float,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:addGoodie(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBCanBeUp() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBCanBeUp(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:getCurChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setCurChangeY(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:getChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setChangeY(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBUp() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBUp(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBNoCollision() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBNoCollision(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBOnlyAboveWall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBOnlyAboveWall(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:enemyCheck(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:getGoodie() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setGoodie(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBDestructable() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBDestructable(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:getTimeToRepeat() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setTimeToRepeat(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:damageWall(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:thinkBeUp(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.game.ApoMarioButtons Method:ApoMarioButtons(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.game.ApoMarioButtons Method:makeButtons() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:ApoMarioPanel(ApoScreen) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:init() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:isBWin() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setBWin(boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:newAchievement() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getAchievements() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getAllCommands() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setAllCommands(ArrayList&lt;ApoMarioStats&gt;) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setDebugMode(boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getSpeedCounter() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setSpeedCounter(int) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:isBJump() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setBJump(boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getBackgroundImage() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getGame() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setGame(boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:isBFirstStart() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setAnalysis() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setButtons(boolean[]) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setButtonFunction(String) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:keyPressed(int,char) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:keyReleased(int,char) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:restartLevel() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:newLevel(| int,int,String) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:mouseReleased(int,int,boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:mousePressed(int,int,boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:mouseDragged(int,int,boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getIMenuBackground() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:think(long) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:thinkLevelGame(int) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:renderLevelWidthStatistics(Graphics2D) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:renderFPS(Graphics2D) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:renderPause(Graphics2D) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:renderAchievements(Graphics2D) "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:ApoMarioAchievements(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:getAchievements() "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addJump() "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addDuck() "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addTime(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addHiddenWord(String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addAchievement(String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:ApoMarioLevel(ApoMarioGameComponent) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:init() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:isBDark() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setBDark(boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getDarkTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setDarkTime(float) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getMaxTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setMaxTime(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getNextLevelString() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setNextLevelString(String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getWidth() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getHeight() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:isBStop() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setBStop(boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getLevelInt() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getComponent() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getGoodies() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getEnemies() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setLevelEntities(ApoMarioEntity[][]) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeLevel(long,boolean,int,int,String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getDifficulty() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setWidth(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setDifficulty(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getStartTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeFinish(int,int| int,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeBoxQuestionMark(int,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeBoxCoin(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getMaxCoins() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makePlayer(float,float) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeGroundWall(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeGroundCorrect() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeWall(BufferedImage,boolean,boolean,boolean,boolean,int,int,int| boolean,boolean,int,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeKoopa(boolean,int,int,boolean,boolean,boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeGumba(int,int,boolean,boolean,boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeImmortal(int,int,boolean,boolean,boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeCanon(int,int,int,boolean,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeFlower(int,int,int,boolean,boolean,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:addParticle(ApoMarioParticle) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:levelRestart() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:restart() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:newLevel(String| int,int,String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:newSameLevel() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getCannons() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getFinish() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getLevelEntities() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getPlayer() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getPassedTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setAnalysis(boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:isBAnalysis() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:think(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkTime(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkPlayer(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkFinish(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkParticle(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkEnemies(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkGoodies(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkLevelEntities(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderBackgroundImage(Graphics2D,BufferedImage,float,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderParticle(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderFinish(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderPlayer(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderEnemies(Graphics2D,int,int,boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderGoodies(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderCoins(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderTiles(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:ApoMarioMyLevels(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeFirstLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeSecondLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeThirdLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeFourthLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeFifthLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeSixLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeSevenLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeWall(int[][],int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeRandomWall(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeEightLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeNineLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeMandyLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeAntjeLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeClemensLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeJessikaLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeTutorialLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeTenLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeElevenLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeTwelveLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeGround(int,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeHole(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:ApoMarioRandomLevel(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:getLastRandom() "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:setLastRandom(long) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:getWidth() "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:setWidth(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:getDifficulty() "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:setDifficulty(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeRandomLevel(long) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeBFull() "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeGround(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeIncreaseWall(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:isEmpty(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeHole(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeHoleOnly(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:isFull(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeCannon(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeFlower(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:isReserved(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:isOneHeight(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeWalls(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:canMakeWalls(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeDestructableWall(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeQuestionmark(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeCoin(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeEnemy(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:ApoMarioStats(String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:getCount() "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:addCount() "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:getCurString() "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:toString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:ApoMarioAnalysis(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:keyButtonReleased(int,char) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseButtonFunction(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseButtonReleased(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseDragged(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mousePressed(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:checkCurString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:getBackgroundImageWithRect() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:ApoMarioGame(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:init(boolean) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:getTutorial() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:keyButtonReleased(int,char) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:checkCurString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:setStop() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mouseButtonFunction(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mouseButtonReleased(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mouseDragged(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mousePressed(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:changeCamera() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:thinkLevel(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:playerHumanControl() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:getBackgroundImageWithRect() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:renderStatistics(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:renderCurcor(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:ApoMarioMenu(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:keyButtonReleased(int,char) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:checkCurString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:exit() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mouseButtonFunction(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:startSimulation() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mouseButtonReleased(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mouseDragged(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mousePressed(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:getBackgroundImageWithRect() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:renderPlayerStats(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:ApoMarioModel(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:init() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getValue() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:setValue(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getLastCommands() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:addCommand(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getBackgroundImageWithRect() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getStatsImage() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getGame() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:keyButtonReleased(int,char) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mouseButtonFunction(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mouseButtonReleased(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mouseDragged(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mousePressed(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkAchievements(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkLevelCode(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkLevelLoad(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkCurString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkDifficulty(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkExtra(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:renderExtraString(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:renderStats(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:renderAchievements(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:renderLevelcodes(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:ApoMarioTutorial(ApoMarioGame) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:isBTutorial() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:setBTutorial(boolean) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:nextCheck() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:checkCurString(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:renderTutorial(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:drawSpeech(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: org.apogames.ApoCanvas Method:paint(Graphics) "/>
                    <element element=" Class: org.apogames.ApoCanvas Method:update(Graphics) "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:ApoDisplayConfiguration(int,int,int,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isApplet() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isWidescreen() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getWidth() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getHeight() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getDepth() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isWindowed() "/>
                    <element element=" Class: org.apogames.ApoIO Method:ApoIO() "/>
                    <element element=" Class: org.apogames.ApoLibraryGame Method:ApoLibraryGame(ApoSubGame) "/>
                    <element element=" Class: org.apogames.ApoLibraryGame Method:run() "/>
                    <element element=" Class: org.apogames.ApoLibraryGame Method:getScreen() "/>
                    <element element=" Class: org.apogames.ApoLibraryGame Method:selectGame(int) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:ApoScreen(String,ApoDisplayConfiguration) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:init() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getComponent() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:setFps(int) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getSubGame() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:setSubGame(ApoSubGame) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getParent() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:setParent(Component) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:initApplet() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:initWindowed() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:repaint() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:addWindowListener(JFrame) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:windowClosing(WindowEvent) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:quit() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:initFullscreen() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:update() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getBufferStrategy() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getGraphics2D() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getDisplayConfiguration() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:addKeyboard(ApoKeyboard) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:addMouse(ApoMouse) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:ApoSubGame(ApoScreen) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:init() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getScreen() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:run() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getKeyboard() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:shouldThink() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:setShouldThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:shouldRepaint() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:setShouldRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:think(long) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:addFrame() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getRenderTime() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getThinkTime() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:end(int) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getNextID() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:load() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:update(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:makeImageArray() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getImages() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getDirection() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setDirection(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:isBLoop() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setBLoop(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:isBAnimation() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setBAnimation(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBOpaque() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBOpaque(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVelocityY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVelocityY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVelocityX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVelocityX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:ApoNewTextfield(float,float,float,float,Font) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getMaxLength() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setMaxLength(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:isBEnabled() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setBEnabled(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getFont() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setFont(Font) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mouseDragged(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mousePressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mouseReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:nextSelectedPosition(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setSelectedPosition(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getThisPosition(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getCurString() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getSelectedString() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteSelectedString() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:removeCurStringAndSetCurString(String) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setCurString(String) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getPosition() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setPosition(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextBackspace() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextDelete() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:addCharacter(int,char) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:showLine() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:ApoTextField(float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:getFont() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:setFont(Font) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:getMaxLength() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:setMaxLength(int) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:getCurString() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:setCurString(String) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:getPosition() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:setPosition(int) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:deleteTextBackspace() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:deleteTextDelete() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:addCharacter(int,char) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:showLine() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getMd5Digest(String) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:setClipboardContents(String) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getClipboardContents() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleContains(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:drawString(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color| int,int,String,Color,Color,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageCopy(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:ApoKeyboard() "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:isPressed(int) "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:getReleased() "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:getPressed() "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:ApoMouse() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:getX() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:getY() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:isDragged() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:getReleased() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:hasClicked(int) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:updateCoord(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:isMoved() "/>
                    <element element=" Class: org.apogames.sound.ApoMidi Method:addSong(String) "/>
                    <element element=" Class: org.apogames.sound.ApoMidi Method:startMusic(int) "/>
                    <element element=" Class: org.apogames.sound.ApoMidi Method:stopMusic() "/>
                    <element element=" Class: org.apogames.sound.ApoMidi Method:setVolume(int) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:ApoMidiPlayer() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:play(Sequence,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:stop() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:close() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequencer() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:setPaused(boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:isPaused() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:setVolume(int) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String) "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:ApoSoundThread(Runnable) "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:run() "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:pause(boolean| ) "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:stop() "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:isRunning() "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:isPaused() "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:AudioPlayer(String,boolean) "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:start() "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:isBStop() "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:setBStop(boolean) "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:isBLoop() "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:setBLoop(boolean) "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:run() "/>
                </node>
                <node levelofreuse="2.433371958285052" name="ApoIcarus">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCopy(boolean[]| byte[][]| int[][]) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                </node>
            </node>
            <node name="Unique elements" number="0"/>
        </node>
        <node levelofreuse="51.05162523900574" name="ApoIcarus">
            <node name="Reused elements" number="534">
                <node levelofreuse="95.50561797752809" name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:ApoBotApplet(| int,int) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:ApoBotComponent(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelLoad(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelSave() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurLevel(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIButtonEmpty() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIPlayer(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getILevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackgroundOriginal() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackgroundOriginal(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:makeBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:centerCamera() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getITile() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setITile(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelWidth(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelHeight(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getImage() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurX(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurY(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:restart() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:think(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderLevel(Graphics2D,BufferedImage,ApoBotLevel| Graphics2D,BufferedImage,ApoBotLevel,boolean) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderPlayer(Graphics2D,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderOvertile(Graphics2D,int,int,int,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderTile(Graphics2D,int,int,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:ApoBotImage() "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImage(String,boolean) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:drawString(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getLogo(int,int,BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getIBackground(BufferedImage,int,int,int,int,int| ApoBotLevel,BufferedImage,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonImage(int,int,String,Color,Color,Color,Color,Color,Font| int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImageCopy(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:main(String[]) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:ApoBotMain(String) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:init() "/>
                    <element element=" Class: apoBot.ApoBotMain Method:windowClosing(WindowEvent) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:ApoBotEntity(int,float,float,float,float) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:getCommand() "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:setCommand(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:ApoBotPlayer(BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:init() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBUp() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBUp(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBJump() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBJump(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunX() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunX(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunY() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunY(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBRun() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBRun(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getStartDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setStartDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:think(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:ApoBotButton(ApoBotComponent) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:ApoBotEditor(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevels() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getCurTile() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:setCurTile(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseClick(int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:renderEditor(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:ApoBotGame(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:addLevelToIO(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMenu() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setGame() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setTutorial() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setEditor() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevelChange(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:reset() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:restart() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:getNextCommand() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:stopGo() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:isLevelWin() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:thinkMove(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextCommand(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerRun() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerJump() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:render(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderFPS(Graphics2D,float) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMenu(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMouseImage(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderWin(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:ApoBotTutorial(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:canGo() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:keyPressed(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:nextStep() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:renderMenuTutorial(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawArrow(Graphics2D,int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawSpeech(Graphics2D,String) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:ApoBotLevel(| int,int| ApoBotLevelLevel[][],Point,int,int[]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getCommandsMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setCommandsMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsOneMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsOneMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsTwoMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsTwoMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setLevel(ApoBotLevelLevel[][]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getStartPoint() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setStartPoint(Point) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getDirectionView() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setDirectionView(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:ApoBotLevelIO() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevels() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:setLevels(ArrayList&lt;ApoBotLevel&gt;) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:addLevel(ApoBotLevel,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:changeLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:removeLevel(ApoBotLevel| int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:readLevel(DataInputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:writeLevel(DataOutputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:ApoBotLevelLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:ApoBotLevelTest() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:makeLevelOne() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getMenuLevel() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:ApoApplet(int,int) "/>
                    <element element=" Class: org.apogames.ApoApplet Method:init() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:ApoAppletBufferedStrategy(int,int) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:ApoComponent(boolean,boolean,int| boolean,boolean,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:ApoComponentBufferedStrategy(boolean,boolean,int| boolean,boolean,int,int| boolean,boolean,int,int,boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getWAIT_TIME_RENDER() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setWAIT_TIME_RENDER(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:render(Graphics2D| ) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:createBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:checkBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoIO Method:ApoIO(| String,String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getLevelName() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setLevelName(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getFileEnding() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setFileEnding(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getCurrentLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setCurrentLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getMaxLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setMaxLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:hasNextLevel(| boolean) "/>
                    <element element=" Class: org.apogames.ApoMain Method:ApoMain(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMain Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMain Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoMain Method:init() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:ApoMainBufferedStrategy(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:ApoNewThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoStart Method:ApoStart() "/>
                    <element element=" Class: org.apogames.ApoStart Method:main(String[]) "/>
                    <element element=" Class: org.apogames.ApoThread Method:ApoThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:ApoTimer(ApoTimerInterface,long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:start() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:stop() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:run() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loopSound(String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:stopLoopingSound() "/>
                </node>
                <node levelofreuse="100.0" name="ApoMarc">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCopy(boolean[]| byte[][]| int[][]) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float| float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point| float,float,float,float) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color| int,int,String,Color,Color,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String| BufferedImage,int,int,int,int,String,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int| Graphics2D| Graphics) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String| BufferedImage,int,int,int,int,String,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float| float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int| Graphics2D| Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point| float,float,float,float) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color| int,int,String,Color,Color,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:ApoBotApplet(| int,int) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:ApoBotComponent(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelLoad(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelSave() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurLevel(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIButtonEmpty() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIPlayer(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getILevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackgroundOriginal() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackgroundOriginal(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:makeBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:centerCamera() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getITile() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setITile(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelWidth(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelHeight(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getImage() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurX(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurY(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:restart() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:think(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderLevel(Graphics2D,BufferedImage,ApoBotLevel| Graphics2D,BufferedImage,ApoBotLevel,boolean) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderPlayer(Graphics2D,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderOvertile(Graphics2D,int,int,int,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderTile(Graphics2D,int,int,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:ApoBotImage() "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImage(String,boolean) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:drawString(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getLogo(int,int,BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getIBackground(BufferedImage,int,int,int,int,int| ApoBotLevel,BufferedImage,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonImage(int,int,String,Color,Color,Color,Color,Color,Font| int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImageCopy(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:main(String[]) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:ApoBotMain(String) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:init() "/>
                    <element element=" Class: apoBot.ApoBotMain Method:windowClosing(WindowEvent) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:ApoBotEntity(int,float,float,float,float) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:getCommand() "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:setCommand(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:ApoBotPlayer(BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:init() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBUp() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBUp(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBJump() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBJump(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunX() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunX(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunY() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunY(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBRun() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBRun(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getStartDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setStartDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:think(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:ApoBotButton(ApoBotComponent) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:ApoBotEditor(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevels() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getCurTile() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:setCurTile(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseClick(int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:renderEditor(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:ApoBotGame(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:addLevelToIO(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMenu() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setGame() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setTutorial() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setEditor() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevelChange(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:reset() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:restart() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:getNextCommand() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:stopGo() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:isLevelWin() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:thinkMove(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextCommand(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerRun() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerJump() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:render(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderFPS(Graphics2D,float) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMenu(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMouseImage(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderWin(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:ApoBotTutorial(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:canGo() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:keyPressed(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:nextStep() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:renderMenuTutorial(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawArrow(Graphics2D,int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawSpeech(Graphics2D,String) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:ApoBotLevel(| int,int| ApoBotLevelLevel[][],Point,int,int[]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getCommandsMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setCommandsMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsOneMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsOneMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsTwoMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsTwoMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setLevel(ApoBotLevelLevel[][]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getStartPoint() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setStartPoint(Point) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getDirectionView() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setDirectionView(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:ApoBotLevelIO() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevels() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:setLevels(ArrayList&lt;ApoBotLevel&gt;) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:addLevel(ApoBotLevel,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:changeLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:removeLevel(ApoBotLevel| int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:readLevel(DataInputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:writeLevel(DataOutputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:ApoBotLevelLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:ApoBotLevelTest() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:makeLevelOne() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getMenuLevel() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:ApoApplet(int,int) "/>
                    <element element=" Class: org.apogames.ApoApplet Method:init() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:ApoAppletBufferedStrategy(int,int) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:ApoComponent(boolean,boolean,int| boolean,boolean,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:ApoComponentBufferedStrategy(boolean,boolean,int| boolean,boolean,int,int| boolean,boolean,int,int,boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getWAIT_TIME_RENDER() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setWAIT_TIME_RENDER(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:render(Graphics2D| ) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:createBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:checkBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoIO Method:ApoIO(| String,String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getLevelName() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setLevelName(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getFileEnding() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setFileEnding(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getCurrentLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setCurrentLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getMaxLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setMaxLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:hasNextLevel(| boolean) "/>
                    <element element=" Class: org.apogames.ApoMain Method:ApoMain(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMain Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMain Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoMain Method:init() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:ApoMainBufferedStrategy(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:ApoNewThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoStart Method:ApoStart() "/>
                    <element element=" Class: org.apogames.ApoStart Method:main(String[]) "/>
                    <element element=" Class: org.apogames.ApoThread Method:ApoThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:ApoTimer(ApoTimerInterface,long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:start() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:stop() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:run() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loopSound(String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:stopLoopingSound() "/>
                </node>
                <node levelofreuse="3.932584269662921" name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCopy(boolean[]| byte[][]| int[][]) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                </node>
            </node>
            <node name="Unique elements" number="512">
                <element element=" Class: apoJump.ApoJumpApplet Method:ApoJumpApplet() "/>
                <element element=" Class: apoJump.ApoJumpApplet Method:stop() "/>
                <element element=" Class: apoJump.ApoJumpApplet Method:destroy() "/>
                <element element=" Class: apoJump.ApoJumpApplet Method:init() "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:ApoJumpComponent(ApoScreen) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:load() "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:isBWin() "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:setBWin(boolean) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:isShowFPS() "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:setShowFPS(boolean) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:getButtons() "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:setButtons(ApoButton[]) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:getImages() "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:getFPS() "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:renderButtons(Graphics2D) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:update(long) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:think(long) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:keyPressed(int,char) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:keyReleased(int,char) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:mouseDragged(int,int,boolean) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:mouseMoved(int,int) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:mousePressed(int,int,boolean) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:mouseReleased(int,int,boolean) "/>
                <element element=" Class: apoJump.ApoJumpComponent Method:setButtonFunction(String) "/>
                <element element=" Class: apoJump.ApoJumpImageContainer Method:load() "/>
                <element element=" Class: apoJump.ApoJumpImages Method:ApoJumpImages() "/>
                <element element=" Class: apoJump.ApoJumpImages Method:getImage(String,boolean) "/>
                <element element=" Class: apoJump.ApoJumpImages Method:getLogo(BufferedImage) "/>
                <element element=" Class: apoJump.ApoJumpImages Method:getImageMouseOver(BufferedImage| BufferedImage,int| BufferedImage,int,Color,int) "/>
                <element element=" Class: apoJump.ApoJumpImages Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font,int) "/>
                <element element=" Class: apoJump.ApoJumpImages Method:getButtonWithImage(int,int,BufferedImage,String,Color,Color,Color| int,int,BufferedImage,String,Color,Color,Color,Font) "/>
                <element element=" Class: apoJump.ApoJumpMain Method:main(String[]) "/>
                <element element=" Class: apoJump.ApoJumpMain Method:ApoJumpMain() "/>
                <element element=" Class: apoJump.entity.ApoJumpArrow Method:ApoJumpArrow(float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpArrow Method:update(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpArrow Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpEnemy Method:ApoJumpEnemy(BufferedImage,float,float,float,float,int,long,int,boolean,float,float,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpEnemy Method:init() "/>
                <element element=" Class: apoJump.entity.ApoJumpEnemy Method:getMaxY() "/>
                <element element=" Class: apoJump.entity.ApoJumpEnemy Method:setMaxY(int) "/>
                <element element=" Class: apoJump.entity.ApoJumpEnemy Method:update(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpEnemy Method:getPoints() "/>
                <element element=" Class: apoJump.entity.ApoJumpEnemy Method:playerJumpOnPlatform(ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpEnemy Method:playerIntersectsWithPlatform(ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpEnemy Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpEntity Method:ApoJumpEntity(BufferedImage,float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpEntity Method:think(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpEntity Method:update(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureArrow Method:ApoJumpFeatureArrow(BufferedImage,float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureArrow Method:update(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureArrow Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureHelicopter Method:ApoJumpFeatureHelicopter(BufferedImage,float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureHelicopter Method:update(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureHelicopter Method:playerJump(ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureHelicopter Method:renderContent(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureMissle Method:ApoJumpFeatureMissle(BufferedImage,float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureMissle Method:update(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureMissle Method:playerJump(ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureMissle Method:renderContent(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureSpring Method:ApoJumpFeatureSpring(BufferedImage,float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureSpring Method:update(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureSpring Method:playerJump(ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureSpring Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpFeatureSpring Method:renderContent(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformIce Method:ApoJumpPlatformIce(BufferedImage,float,float,float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformIce Method:playerJumpOnPlatform() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformIce Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformInvisible Method:ApoJumpPlatformInvisible(BufferedImage,float,float,float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformInvisible Method:init() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformInvisible Method:update(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformInvisible Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformNormal Method:ApoJumpPlatformNormal(BufferedImage,float,float,float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformNormal Method:init() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformNormal Method:getMaxVecY() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformNormal Method:setMaxVecY(int) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformNormal Method:update(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformNormal Method:playerIntersectsWithPlatform(ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformNormal Method:playerJumpOnPlatform() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlatformNormal Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:ApoJumpPlayer(BufferedImage,float,float,float,float) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:init() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:getAutomaticArrow() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:setAutomaticArrow(int) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:isBDie() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:setVecX(float) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:setHelicopter() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:setMissle() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:think(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:thinkAutomaticArrow(int,ApoJumpLevel) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:getTimeBonus() "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:thinkPosition(int) "/>
                <element element=" Class: apoJump.entity.ApoJumpPlayer Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpButton Method:ApoJumpButton(ApoJumpPanel) "/>
                <element element=" Class: apoJump.game.ApoJumpButton Method:init() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:ApoJumpPanel(ApoScreen) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:init() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:getLevel() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:getAchievements() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:getHighscore() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:makeBackground() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:setMenu() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:setGame() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:setOptions() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:setHelp() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:setAchievements() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:setHighscore() "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:setBWin(boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:setButtons(boolean[]) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:keyReleased(int,char) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:setButtonFunction(String) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:mouseMoved(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:mousePressed(int,int,boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:mouseDragged(int,int,boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:mouseReleased(int,int,boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:think(long) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:render(Graphics2D) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:renderBackground(Graphics2D) "/>
                <element element=" Class: apoJump.game.ApoJumpPanel Method:renderFPS(Graphics2D) "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:ApoJumpState(ApoJumpPanel) "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:init() "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:getGame() "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:mouseMoved(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:mouseDragged(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:mousePressed(int,int,boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:think(int) "/>
                <element element=" Class: apoJump.game.ApoJumpState Method:render(Graphics2D) "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:ApoJumpStateAchievements(ApoJumpPanel) "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:init() "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:loadAchievements() "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:saveAchievements() "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:makeBackground() "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:addAchievements(String,boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:think(int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateAchievements Method:render(Graphics2D) "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:ApoJumpStateGame(ApoJumpPanel) "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:init() "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:setWin() "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:mouseDragged(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:mousePressed(int,int,boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:mouseMoved(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:restart() "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:uploadScore() "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:upload() "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:think(int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateGame Method:render(Graphics2D) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHelp Method:ApoJumpStateHelp(ApoJumpPanel) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHelp Method:init() "/>
                <element element=" Class: apoJump.game.ApoJumpStateHelp Method:makeBackground() "/>
                <element element=" Class: apoJump.game.ApoJumpStateHelp Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHelp Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHelp Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHelp Method:think(int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHelp Method:render(Graphics2D) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHelp Method:drawCloud(Graphics2D,BufferedImage,int,int,String) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:ApoJumpStateHighscore(ApoJumpPanel) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:init() "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:makeBackground() "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:loadHighscore(boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:run() "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:load(boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:getPosition(int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:getHelp() "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:sortList(boolean) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:nextHighscore(int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:think(int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscore Method:render(Graphics2D) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscoreHelp Method:ApoJumpStateHighscoreHelp(int,int,String) "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscoreHelp Method:getPoints() "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscoreHelp Method:getTime() "/>
                <element element=" Class: apoJump.game.ApoJumpStateHighscoreHelp Method:getName() "/>
                <element element=" Class: apoJump.game.ApoJumpStateMenu Method:ApoJumpStateMenu(ApoJumpPanel) "/>
                <element element=" Class: apoJump.game.ApoJumpStateMenu Method:init() "/>
                <element element=" Class: apoJump.game.ApoJumpStateMenu Method:makeBackground() "/>
                <element element=" Class: apoJump.game.ApoJumpStateMenu Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoJump.game.ApoJumpStateMenu Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoJump.game.ApoJumpStateMenu Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateMenu Method:executeFunction() "/>
                <element element=" Class: apoJump.game.ApoJumpStateMenu Method:think(int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateMenu Method:render(Graphics2D) "/>
                <element element=" Class: apoJump.game.ApoJumpStateOptions Method:ApoJumpStateOptions(ApoJumpPanel) "/>
                <element element=" Class: apoJump.game.ApoJumpStateOptions Method:init() "/>
                <element element=" Class: apoJump.game.ApoJumpStateOptions Method:makeBackground() "/>
                <element element=" Class: apoJump.game.ApoJumpStateOptions Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoJump.game.ApoJumpStateOptions Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoJump.game.ApoJumpStateOptions Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateOptions Method:think(int) "/>
                <element element=" Class: apoJump.game.ApoJumpStateOptions Method:render(Graphics2D) "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:ApoJumpLevel(ApoJumpPanel) "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:init() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:getTime() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:addJump() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:addEnemyKill() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:addWings() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:getPlayer() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:getPlattforms() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:addPoint(int) "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:getPoints() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:makeArrow(int,int) "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:makePlatforms(float,float) "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:getEnemies() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:getChangeY() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:setWin() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:isFirstPosition() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:think(int) "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:addAchievement(String) "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:makeChangeY() "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoJump.level.ApoJumpLevel Method:renderStatistics(Graphics2D) "/>
                <element element=" Class: org.apogames.ApoCanvas Method:paint(Graphics) "/>
                <element element=" Class: org.apogames.ApoCanvas Method:update(Graphics) "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:ApoDisplayConfiguration(int,int,int,boolean,boolean) "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isApplet() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isWidescreen() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getWidth() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getHeight() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getDepth() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isWindowed() "/>
                <element element=" Class: org.apogames.ApoIO Method:ApoIO() "/>
                <element element=" Class: org.apogames.ApoIO Method:readLevel(String) "/>
                <element element=" Class: org.apogames.ApoLibraryGame Method:ApoLibraryGame(ApoSubGame) "/>
                <element element=" Class: org.apogames.ApoLibraryGame Method:run() "/>
                <element element=" Class: org.apogames.ApoLibraryGame Method:getScreen() "/>
                <element element=" Class: org.apogames.ApoLibraryGame Method:selectGame(int) "/>
                <element element=" Class: org.apogames.ApoScreen Method:ApoScreen(String,ApoDisplayConfiguration) "/>
                <element element=" Class: org.apogames.ApoScreen Method:init() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getComponent() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getFps() "/>
                <element element=" Class: org.apogames.ApoScreen Method:setFps(int) "/>
                <element element=" Class: org.apogames.ApoScreen Method:getSubGame() "/>
                <element element=" Class: org.apogames.ApoScreen Method:setSubGame(ApoSubGame) "/>
                <element element=" Class: org.apogames.ApoScreen Method:getParent() "/>
                <element element=" Class: org.apogames.ApoScreen Method:setParent(Component) "/>
                <element element=" Class: org.apogames.ApoScreen Method:initApplet() "/>
                <element element=" Class: org.apogames.ApoScreen Method:initWindowed() "/>
                <element element=" Class: org.apogames.ApoScreen Method:repaint() "/>
                <element element=" Class: org.apogames.ApoScreen Method:addWindowListener(JFrame) "/>
                <element element=" Class: org.apogames.ApoScreen Method:windowClosing(WindowEvent) "/>
                <element element=" Class: org.apogames.ApoScreen Method:quit() "/>
                <element element=" Class: org.apogames.ApoScreen Method:initFullscreen() "/>
                <element element=" Class: org.apogames.ApoScreen Method:update() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getBufferStrategy() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getGraphics2D() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getDisplayConfiguration() "/>
                <element element=" Class: org.apogames.ApoScreen Method:addKeyboard(ApoKeyboard) "/>
                <element element=" Class: org.apogames.ApoScreen Method:addMouse(ApoMouse) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:ApoSubGame(ApoScreen) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:init() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:stopGame() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getScreen() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:run() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getKeyboard() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:shouldThink() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:setShouldThink(boolean) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:shouldRepaint() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:setShouldRepaint(boolean) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:think(long) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:render() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:addFrame() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getRenderTime() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getThinkTime() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:end(int) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getNextID() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:load() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:update(long) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:makeImageArray() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getImages() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getDirection() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setDirection(int) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:isBLoop() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setBLoop(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:isBAnimation() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setBAnimation(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getIBackground() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setIBackground(BufferedImage) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getWait() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBOpaque() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBOpaque(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getVelocityY() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setVelocityY(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getVelocityX() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setVelocityX(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:ApoNewTextfield(float,float,float,float,Font) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:init() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getMaxLength() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setMaxLength(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:isBEnabled() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setBEnabled(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getFont() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setFont(Font) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mouseDragged(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mousePressed(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mouseReleased(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:nextSelectedPosition(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setSelectedPosition(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getThisPosition(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getCurString() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getSelectedString() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteSelectedString() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:removeCurStringAndSetCurString(String) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setCurString(String) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getPosition() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setSelect() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setPosition(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextBackspace() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextDelete() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:addCharacter(int,char) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:showLine() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:ApoTextField(float,float,float,float) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:init() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:getFont() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:setFont(Font) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:getMaxLength() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:setMaxLength(int) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:getCurString() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:setCurString(String) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:getPosition() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:setPosition(int) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:deleteTextBackspace() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:deleteTextDelete() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:addCharacter(int,char) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:showLine() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String) "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getMd5Digest(String) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:setClipboardContents(String) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getClipboardContents() "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:rectangleContains(float,float,float,float,float,float) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:drawSpeech(Graphics2D,String,int,int,int) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:saveData(URL,String,String) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:loadData(URL,String) "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:getInstance() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:ApoHighscore() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:getNames() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:getTime() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:getPoints() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:clear() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:save(int,int,String) "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:load() "/>
                <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:drawString(Graphics2D,String,int,int,int) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageCopy(BufferedImage) "/>
                <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:ApoKeyboard() "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:isPressed(int) "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:getReleased() "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:getPressed() "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:keyPressed(KeyEvent) "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:keyReleased(KeyEvent) "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:keyTyped(KeyEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:ApoMouse() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:getX() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:getY() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:isDragged() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:getReleased() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:hasClicked(int) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:mousePressed(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:mouseReleased(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:mouseMoved(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:mouseDragged(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:updateCoord(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:isMoved() "/>
            </node>
        </node>
        <node levelofreuse="71.78683385579939" name="ApoMarc">
            <node name="Reused elements" number="1374">
                <node levelofreuse="37.26346433770014" name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:ApoBotApplet(| int,int) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:ApoBotComponent(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelLoad(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelSave() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurLevel(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIButtonEmpty() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIPlayer(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getILevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackgroundOriginal() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackgroundOriginal(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:makeBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:centerCamera() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getITile() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setITile(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelWidth(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelHeight(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getImage() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurX(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurY(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:restart() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:think(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderLevel(Graphics2D,BufferedImage,ApoBotLevel| Graphics2D,BufferedImage,ApoBotLevel,boolean) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderPlayer(Graphics2D,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderOvertile(Graphics2D,int,int,int,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderTile(Graphics2D,int,int,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:ApoBotImage() "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImage(String,boolean) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:drawString(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getLogo(int,int,BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getIBackground(BufferedImage,int,int,int,int,int| ApoBotLevel,BufferedImage,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonImage(int,int,String,Color,Color,Color,Color,Color,Font| int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImageCopy(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:main(String[]) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:ApoBotMain(String) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:init() "/>
                    <element element=" Class: apoBot.ApoBotMain Method:windowClosing(WindowEvent) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:ApoBotEntity(int,float,float,float,float) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:getCommand() "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:setCommand(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:ApoBotPlayer(BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:init() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBUp() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBUp(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBJump() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBJump(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunX() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunX(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunY() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunY(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBRun() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBRun(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getStartDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setStartDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:think(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:ApoBotButton(ApoBotComponent) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:ApoBotEditor(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevels() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getCurTile() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:setCurTile(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseClick(int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:renderEditor(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:ApoBotGame(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:addLevelToIO(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMenu() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setGame() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setTutorial() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setEditor() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevelChange(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:reset() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:restart() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:getNextCommand() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:stopGo() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:isLevelWin() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:thinkMove(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextCommand(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerRun() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerJump() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:render(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderFPS(Graphics2D,float) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMenu(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMouseImage(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderWin(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:ApoBotTutorial(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:canGo() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:keyPressed(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:nextStep() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:renderMenuTutorial(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawArrow(Graphics2D,int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawSpeech(Graphics2D,String) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:ApoBotLevel(| int,int| ApoBotLevelLevel[][],Point,int,int[]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getCommandsMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setCommandsMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsOneMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsOneMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsTwoMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsTwoMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setLevel(ApoBotLevelLevel[][]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getStartPoint() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setStartPoint(Point) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getDirectionView() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setDirectionView(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:ApoBotLevelIO() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevels() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:setLevels(ArrayList&lt;ApoBotLevel&gt;) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:addLevel(ApoBotLevel,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:changeLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:removeLevel(ApoBotLevel| int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:readLevel(DataInputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:writeLevel(DataOutputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:ApoBotLevelLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:ApoBotLevelTest() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:makeLevelOne() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getMenuLevel() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:ApoApplet(int,int) "/>
                    <element element=" Class: org.apogames.ApoApplet Method:init() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:ApoAppletBufferedStrategy(int,int) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:ApoComponent(boolean,boolean,int| boolean,boolean,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:ApoComponentBufferedStrategy(boolean,boolean,int| boolean,boolean,int,int| boolean,boolean,int,int,boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getWAIT_TIME_RENDER() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setWAIT_TIME_RENDER(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:render(Graphics2D| ) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:createBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:checkBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoIO Method:ApoIO(| String,String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getLevelName() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setLevelName(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getFileEnding() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setFileEnding(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getCurrentLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setCurrentLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getMaxLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setMaxLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:hasNextLevel(| boolean) "/>
                    <element element=" Class: org.apogames.ApoMain Method:ApoMain(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMain Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMain Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoMain Method:init() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:ApoMainBufferedStrategy(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:ApoNewThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoStart Method:ApoStart() "/>
                    <element element=" Class: org.apogames.ApoStart Method:main(String[]) "/>
                    <element element=" Class: org.apogames.ApoThread Method:ApoThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:ApoTimer(ApoTimerInterface,long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:start() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:stop() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:run() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loopSound(String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:stopLoopingSound() "/>
                </node>
                <node levelofreuse="38.8646288209607" name="ApoIcarus">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCopy(boolean[]| byte[][]| int[][]) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float| float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point| float,float,float,float) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color| int,int,String,Color,Color,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String| BufferedImage,int,int,int,int,String,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int| Graphics2D| Graphics) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String| BufferedImage,int,int,int,int,String,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float| float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int| Graphics2D| Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point| float,float,float,float) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color| int,int,String,Color,Color,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:ApoBotApplet(| int,int) "/>
                    <element element=" Class: apoBot.ApoBotApplet Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:ApoBotComponent(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:init() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelLoad(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:levelSave() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurLevel(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIButtonEmpty() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIPlayer() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIPlayer(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getILevel() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackgroundOriginal() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackgroundOriginal(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:makeBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:centerCamera() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getITile() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setITile(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelWidth(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getLevelHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setLevelHeight(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getIBackground() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getImage() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurX(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setCurY(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:restart() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:think(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToWidth() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:isLevelToHeight() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getStartY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurX() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:getCurY() "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderLevel(Graphics2D,BufferedImage,ApoBotLevel| Graphics2D,BufferedImage,ApoBotLevel,boolean) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderPlayer(Graphics2D,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderOvertile(Graphics2D,int,int,int,int,int,ApoBotLevel) "/>
                    <element element=" Class: apoBot.ApoBotComponent Method:renderTile(Graphics2D,int,int,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:ApoBotImage() "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImage(String,boolean) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:drawString(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getLogo(int,int,BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getIBackground(BufferedImage,int,int,int,int,int| ApoBotLevel,BufferedImage,int,int) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getButtonImage(int,int,String,Color,Color,Color,Color,Color,Font| int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color) "/>
                    <element element=" Class: apoBot.ApoBotImage Method:getImageCopy(BufferedImage) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:main(String[]) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:ApoBotMain(String) "/>
                    <element element=" Class: apoBot.ApoBotMain Method:init() "/>
                    <element element=" Class: apoBot.ApoBotMain Method:windowClosing(WindowEvent) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:ApoBotEntity(int,float,float,float,float) "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:getCommand() "/>
                    <element element=" Class: apoBot.entity.ApoBotEntity Method:setCommand(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:ApoBotPlayer(BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:init() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBUp() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBUp(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurJumpHeight() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurJumpHeight(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBJump() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBJump(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunX() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunX(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getRunY() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setRunY(float) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:isBRun() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setBRun(boolean) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getStartDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setStartDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:getCurDir() "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:setCurDir(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:think(int) "/>
                    <element element=" Class: apoBot.entity.ApoBotPlayer Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:ApoBotButton(ApoBotComponent) "/>
                    <element element=" Class: apoBot.game.ApoBotButton Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:ApoBotEditor(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevels() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:getCurTile() "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:setCurTile(int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:mouseClick(int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotEditor Method:renderEditor(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:ApoBotGame(boolean,boolean,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:loadLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:saveLevel(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:addLevelToIO(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMenu() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setGame() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setTutorial() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setEditor() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setKeyFunction(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setMouseFunction(String) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevelChange(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextLevel(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:reset() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:restart() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:getNextCommand() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:setLevel(ApoBotLevel) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:stopGo() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:isLevelWin() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:thinkMove(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:nextCommand(int) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerRun() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:canPlayerJump() "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:render(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderFPS(Graphics2D,float) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMenu(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderMouseImage(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotGame Method:renderWin(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:ApoBotTutorial(ApoBotGame) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:init() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:canGo() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:keyPressed(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:nextStep() "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:think(int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:renderMenuTutorial(Graphics2D) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawArrow(Graphics2D,int,int,int) "/>
                    <element element=" Class: apoBot.game.ApoBotTutorial Method:drawSpeech(Graphics2D,String) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:ApoBotLevel(| int,int| ApoBotLevelLevel[][],Point,int,int[]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getCommandsMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setCommandsMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsOneMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsOneMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getFunctionsTwoMenu() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setFunctionsTwoMenu(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setLevel(ApoBotLevelLevel[][]) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getStartPoint() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setStartPoint(Point) "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:getDirectionView() "/>
                    <element element=" Class: apoBot.level.ApoBotLevel Method:setDirectionView(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:ApoBotLevelIO() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getMaxLevel() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:getLevels() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:setLevels(ArrayList&lt;ApoBotLevel&gt;) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:addLevel(ApoBotLevel,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:changeLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:removeLevel(ApoBotLevel| int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:readLevel(DataInputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelIO Method:writeLevel(DataOutputStream) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:ApoBotLevelLevel(int,int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:init() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getStartHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setStartHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getGround() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setGround(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:getHeight() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelLevel Method:setHeight(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:ApoBotLevelTest() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getLevel(int) "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:makeLevelOne() "/>
                    <element element=" Class: apoBot.level.ApoBotLevelTest Method:getMenuLevel() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:ApoApplet(int,int) "/>
                    <element element=" Class: org.apogames.ApoApplet Method:init() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoApplet Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:ApoAppletBufferedStrategy(int,int) "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:destroy() "/>
                    <element element=" Class: org.apogames.ApoAppletBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:ApoComponent(boolean,boolean,int| boolean,boolean,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponent Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:ApoComponentBufferedStrategy(boolean,boolean,int| boolean,boolean,int,int| boolean,boolean,int,int,boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getWAIT_TIME_RENDER() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setWAIT_TIME_RENDER(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getButtons() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtonFunction(String) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:render(Graphics2D| ) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:createBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:checkBackbuffer() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setRestartThreadValues() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderFPS(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:start() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:stop() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getFPS() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:getBDirections() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBDirections(boolean[]) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBBack() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBBack(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBLoose() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBLoose(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBWin() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBWin(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBHelp() "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBHelp(boolean) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseClicked(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseEntered(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseExited(MouseEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseWheelMoved(MouseWheelEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusGained(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusLost(FocusEvent) "/>
                    <element element=" Class: org.apogames.ApoIO Method:ApoIO(| String,String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getLevelName() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setLevelName(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getFileEnding() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setFileEnding(String) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getCurrentLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setCurrentLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:getMaxLevel() "/>
                    <element element=" Class: org.apogames.ApoIO Method:setMaxLevel(int) "/>
                    <element element=" Class: org.apogames.ApoIO Method:hasNextLevel(| boolean) "/>
                    <element element=" Class: org.apogames.ApoMain Method:ApoMain(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMain Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMain Method:setComponent(ApoComponent) "/>
                    <element element=" Class: org.apogames.ApoMain Method:init() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:ApoMainBufferedStrategy(String| String,int,int) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:initWindow() "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                    <element element=" Class: org.apogames.ApoMainBufferedStrategy Method:init() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:ApoNewThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoNewThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoStart Method:ApoStart() "/>
                    <element element=" Class: org.apogames.ApoStart Method:main(String[]) "/>
                    <element element=" Class: org.apogames.ApoThread Method:ApoThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:getWaitRender() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setWaitRender(long) "/>
                    <element element=" Class: org.apogames.ApoThread Method:start() "/>
                    <element element=" Class: org.apogames.ApoThread Method:stop() "/>
                    <element element=" Class: org.apogames.ApoThread Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoThread Method:run() "/>
                    <element element=" Class: org.apogames.ApoThread Method:computeDelta() "/>
                    <element element=" Class: org.apogames.ApoThread Method:setRestart() "/>
                    <element element=" Class: org.apogames.ApoThread Method:think() "/>
                    <element element=" Class: org.apogames.ApoThread Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:ApoTimer(ApoTimerInterface,long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRender() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRender(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getWait() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setWait(long) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:start() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:stop() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:isBRunning() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:setBRunning(boolean) "/>
                    <element element=" Class: org.apogames.ApoTimer Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoTimer Method:run() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:render() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBThink() "/>
                    <element element=" Class: org.apogames.ApoTimerInterface Method:isBRepaint() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVecX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVecX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loopSound(String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:stopLoopingSound() "/>
                </node>
                <node levelofreuse="62.66375545851528" name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando">
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                    <element element=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:render(| Graphics2D) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCopy(boolean[]| byte[][]| int[][]) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequence(String| InputStream) "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:start(| boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequence(String| InputStream) "/>
                    <element element=" Class: apoCommando.ApoMarioApplet Method:ApoMarioApplet() "/>
                    <element element=" Class: apoCommando.ApoMarioApplet Method:stop() "/>
                    <element element=" Class: apoCommando.ApoMarioApplet Method:destroy() "/>
                    <element element=" Class: apoCommando.ApoMarioApplet Method:init() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:ApoMarioGameComponent(ApoScreen) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:load() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getChangeX() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setChangeX(float) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getChangeY() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setChangeY(float) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:isBPause() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setBPause(boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getResizeImage(BufferedImage) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getLevel() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setLevel(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:isShowFPS() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setShowFPS(boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getButtons() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setButtons(ApoButton[]) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getImages() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:getFPS() "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:renderButtons(Graphics2D) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:update(long) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:think(long) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:keyPressed(int,char) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:keyReleased(int,char) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:mouseDragged(int,int,boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:mousePressed(int,int,boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:mouseReleased(int,int,boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioGameComponent Method:setButtonFunction(String) "/>
                    <element element=" Class: apoCommando.ApoMarioImageContainer Method:init(ApoMarioGameComponent) "/>
                    <element element=" Class: apoCommando.ApoMarioImageContainer Method:setTileSet(int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:ApoMarioImages() "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getImage(String,boolean) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getBackgroundBack(BufferedImage,int,int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getBackgroundFront(BufferedImage,int,int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:drawBackground(Graphics2D,BufferedImage,int,int,int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getLogo(BufferedImage) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font,int) "/>
                    <element element=" Class: apoCommando.ApoMarioImages Method:getButtonWithImage(int,int,BufferedImage,String,Color,Color,Color| int,int,BufferedImage,String,Color,Color,Color,Font) "/>
                    <element element=" Class: apoCommando.ApoMarioMain Method:main(String[]) "/>
                    <element element=" Class: apoCommando.ApoMarioMain Method:ApoMarioMain() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:ApoMarioCannon(BufferedImage,BufferedImage,float,float,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:getCannons() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:thinkCanon(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:makeCannon(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannon Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:ApoMarioCannonCannon(BufferedImage,float,float,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCannonCannon Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:ApoMarioCoin(BufferedImage,BufferedImage,float,float,int,long,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:getCurY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:setCurY(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:setBVisible(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoin Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoinParticle Method:ApoMarioCoinParticle(BufferedImage,BufferedImage,float,float,int,long) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoinParticle Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioCoinParticle Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:ApoMarioDestructableWall(BufferedImage,BufferedImage,float,float,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:getParticle() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:isBWall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:makeParticle() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:damageWall(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioDestructableWall Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:ApoMarioEnd(float,float,float,float,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:hitTheBar(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnd Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:ApoMarioEnemy(BufferedImage,float,float,float,float,int,long,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setChangeY(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBImmortal() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBImmortal(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBDie() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBDie(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBFall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBFall(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBFlyOriginal() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBFlyOriginal(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getPoints() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setPoints(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:isBFly() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:setBFly(boolean| boolean,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getMirrorImage(BufferedImage) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:die(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:thinkJump(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:thinkSpeedAndMoveEnemy(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:nextYCheck(int,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:downCheck() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEnemy Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:ApoMarioEntity(BufferedImage,float,float,float,float,int,long,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getId() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getDirection() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:changeDirection() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:setDirection(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getLevel() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:setLevel(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:yDownCheckEntity(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:nextYCheck(int,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:thinkCollision(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:xChange(ApoMarioLevel,int,int,Rectangle2D.Float,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:makeParticles(float,float,float,float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:getMinMax(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioEntity Method:renderImage(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:ApoMarioFireball(BufferedImage,float,float,int,long,boolean,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:setVelocityX(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:checkWall(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:intersectsWithEnemy(ApoMarioEnemy,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:nextYCheck(int,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:downCheck() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFireball Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:ApoMarioFlower(BufferedImage,float,float,float,float,int,long,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:getMyChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioFlower Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieFireflower Method:ApoMarioGoodieFireflower(BufferedImage,float,float,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieFireflower Method:catchMe(ApoMarioPlayer) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:ApoMarioGoodieMushroom(BufferedImage,float,float,boolean,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:catchMe(ApoMarioPlayer) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:ApoMarioGumba(BufferedImage,float,float,float,float,int,long,boolean,boolean,boolean,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:isBLeft() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:setVelocityX(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioGumba Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:ApoMarioKoopa(BufferedImage,float,float,float,float,int,long,boolean,boolean,boolean,boolean,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:die(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioKoopa Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:ApoMarioParticle(BufferedImage,float,float,int,long) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:think(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioParticle Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:ApoMarioPlayer(float,float,float,float,int,long,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getTeamName() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getAuthor() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setTeamName(String) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setAuthor(String) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:addMessage(String) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBDie() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getCoins() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setCoins(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getPoints() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setPoints(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getAi() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setAi(String) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getDamageTime() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setDamageTime(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:damagePlayer() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:catchMushroom() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:catchFireflower() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getType() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setType(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:playerDie() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBGodMode() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setBGodMode(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getGoalVecX() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setGoalVecX(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getLevelX() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getLevelY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBSpeed() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getPlayer() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setBSpeed(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:addFireBall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBDown() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setBDown(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:canStandUp(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBJump() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setBJump(boolean,boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:isBEnemyJump() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:setEnemyJump() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getFireballs() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:thinkAI(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:thinkSpeedAndMovePlayer(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:yDownCheckEntity(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:test(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:testNewY(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioPlayer Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:ApoMarioQuestionmark(BufferedImage,BufferedImage,float,float,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:damageWall(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:isBWall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioQuestionmark Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:ApoMarioShell(BufferedImage,float,float,float,float,int,long,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:getPlayer() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:setPlayer(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:getRec() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:getNextRec(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:thinkJump(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:damageCheck(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:intersectsWithEnemy(ApoMarioEnemy,ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioShell Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:ApoMarioWall(BufferedImage,float,float,int| BufferedImage,float,float,boolean,int| BufferedImage,float,float,float,float,boolean,int| BufferedImage,float,float,float,float,int,int,boolean,int| BufferedImage,float,float,float,float,int,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:init() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:addGoodie(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBCanBeUp() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBCanBeUp(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:getCurChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setCurChangeY(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:getChangeY() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setChangeY(float) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBUp() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBUp(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBNoCollision() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBNoCollision(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBOnlyAboveWall() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBOnlyAboveWall(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:enemyCheck(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:getGoodie() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setGoodie(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:isBDestructable() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setBDestructable(boolean) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:getTimeToRepeat() "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:setTimeToRepeat(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:damageWall(ApoMarioLevel,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:think(int,ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:thinkBeUp(int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:coinCheck(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:xCheckChange(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:yCheckUp(ApoMarioLevel,int,int) "/>
                    <element element=" Class: apoCommando.entity.ApoMarioWall Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                    <element element=" Class: apoCommando.game.ApoMarioButtons Method:ApoMarioButtons(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.game.ApoMarioButtons Method:makeButtons() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:ApoMarioPanel(ApoScreen) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:init() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:isBWin() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setBWin(boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:newAchievement() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getAchievements() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getAllCommands() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setAllCommands(ArrayList&lt;ApoMarioStats&gt;) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setDebugMode(boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getSpeedCounter() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setSpeedCounter(int) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:isBJump() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setBJump(boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getBackgroundImage() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getGame() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setGame(boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:isBFirstStart() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setAnalysis() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setButtons(boolean[]) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:setButtonFunction(String) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:keyPressed(int,char) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:keyReleased(int,char) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:restartLevel() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:newLevel(| int,int,String) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:mouseReleased(int,int,boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:mousePressed(int,int,boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:mouseDragged(int,int,boolean) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:getIMenuBackground() "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:think(long) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:thinkLevelGame(int) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:renderLevelWidthStatistics(Graphics2D) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:renderFPS(Graphics2D) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:renderPause(Graphics2D) "/>
                    <element element=" Class: apoCommando.game.ApoMarioPanel Method:renderAchievements(Graphics2D) "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:ApoMarioAchievements(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:getAchievements() "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addJump() "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addDuck() "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addTime(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addHiddenWord(String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioAchievements Method:addAchievement(String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:ApoMarioLevel(ApoMarioGameComponent) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:init() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:isBDark() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setBDark(boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getDarkTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setDarkTime(float) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getMaxTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setMaxTime(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getNextLevelString() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setNextLevelString(String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getWidth() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getHeight() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:isBStop() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setBStop(boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getLevelInt() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getComponent() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getGoodies() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getEnemies() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setLevelEntities(ApoMarioEntity[][]) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeLevel(long,boolean,int,int,String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getDifficulty() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setWidth(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setDifficulty(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getStartTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeFinish(int,int| int,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeBoxQuestionMark(int,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeBoxCoin(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getMaxCoins() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makePlayer(float,float) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeGroundWall(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeGroundCorrect() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeWall(BufferedImage,boolean,boolean,boolean,boolean,int,int,int| boolean,boolean,int,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeKoopa(boolean,int,int,boolean,boolean,boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeGumba(int,int,boolean,boolean,boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeImmortal(int,int,boolean,boolean,boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeCanon(int,int,int,boolean,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:makeFlower(int,int,int,boolean,boolean,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:addParticle(ApoMarioParticle) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:levelRestart() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:restart() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:newLevel(String| int,int,String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:newSameLevel() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getCannons() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getFinish() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getLevelEntities() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getPlayer() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:getPassedTime() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:setAnalysis(boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:isBAnalysis() "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:think(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkTime(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkPlayer(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkFinish(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkParticle(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkEnemies(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkGoodies(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:thinkLevelEntities(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderBackgroundImage(Graphics2D,BufferedImage,float,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderParticle(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderFinish(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderPlayer(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderEnemies(Graphics2D,int,int,boolean) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderGoodies(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderCoins(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioLevel Method:renderTiles(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:ApoMarioMyLevels(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeFirstLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeSecondLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeThirdLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeFourthLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeFifthLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeSixLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeSevenLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeWall(int[][],int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeRandomWall(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeEightLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeNineLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeMandyLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeAntjeLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeClemensLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeJessikaLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeTutorialLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeTenLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeElevenLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeTwelveLevel(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeGround(int,int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioMyLevels Method:makeHole(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:ApoMarioRandomLevel(ApoMarioLevel) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:getLastRandom() "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:setLastRandom(long) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:getWidth() "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:setWidth(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:getDifficulty() "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:setDifficulty(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeRandomLevel(long) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeBFull() "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeGround(int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeIncreaseWall(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:isEmpty(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeHole(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeHoleOnly(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:isFull(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeCannon(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeFlower(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:isReserved(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:isOneHeight(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeWalls(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:canMakeWalls(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeDestructableWall(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeQuestionmark(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeCoin(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeEnemy(int,int) "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:ApoMarioStats(String) "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:getCount() "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:addCount() "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:getCurString() "/>
                    <element element=" Class: apoCommando.level.ApoMarioStats Method:toString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:ApoMarioAnalysis(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:keyButtonReleased(int,char) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseButtonFunction(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseButtonReleased(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseDragged(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:mousePressed(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:checkCurString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:getBackgroundImageWithRect() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioAnalysis Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:ApoMarioGame(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:init(boolean) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:getTutorial() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:keyButtonReleased(int,char) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:checkCurString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:setStop() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mouseButtonFunction(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mouseButtonReleased(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mouseDragged(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:mousePressed(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:changeCamera() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:thinkLevel(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:playerHumanControl() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:getBackgroundImageWithRect() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:renderStatistics(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioGame Method:renderCurcor(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:ApoMarioMenu(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:keyButtonReleased(int,char) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:checkCurString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:exit() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mouseButtonFunction(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:startSimulation() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mouseButtonReleased(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mouseDragged(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:mousePressed(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:getBackgroundImageWithRect() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioMenu Method:renderPlayerStats(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:ApoMarioModel(ApoMarioPanel) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:init() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getValue() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:setValue(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getLastCommands() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:addCommand(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getBackgroundImageWithRect() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getStatsImage() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:getGame() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:keyButtonReleased(int,char) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mouseButtonFunction(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mouseButtonReleased(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mouseMoved(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mouseDragged(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:mousePressed(int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkAchievements(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkLevelCode(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkLevelLoad(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkCurString() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkDifficulty(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:checkExtra(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:render(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:renderExtraString(Graphics2D,int,int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:renderStats(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:renderAchievements(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioModel Method:renderLevelcodes(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:ApoMarioTutorial(ApoMarioGame) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:isBTutorial() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:setBTutorial(boolean) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:nextCheck() "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:checkCurString(String) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:think(int) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:renderTutorial(Graphics2D) "/>
                    <element element=" Class: apoCommando.panels.ApoMarioTutorial Method:drawSpeech(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: org.apogames.ApoCanvas Method:paint(Graphics) "/>
                    <element element=" Class: org.apogames.ApoCanvas Method:update(Graphics) "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:ApoDisplayConfiguration(int,int,int,boolean,boolean) "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isApplet() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isWidescreen() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getWidth() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getHeight() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getDepth() "/>
                    <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isWindowed() "/>
                    <element element=" Class: org.apogames.ApoIO Method:ApoIO() "/>
                    <element element=" Class: org.apogames.ApoLibraryGame Method:ApoLibraryGame(ApoSubGame) "/>
                    <element element=" Class: org.apogames.ApoLibraryGame Method:run() "/>
                    <element element=" Class: org.apogames.ApoLibraryGame Method:getScreen() "/>
                    <element element=" Class: org.apogames.ApoLibraryGame Method:selectGame(int) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:ApoScreen(String,ApoDisplayConfiguration) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:init() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getComponent() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getFps() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:setFps(int) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getSubGame() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:setSubGame(ApoSubGame) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getParent() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:setParent(Component) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:initApplet() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:initWindowed() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:repaint() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:addWindowListener(JFrame) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:windowClosing(WindowEvent) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:quit() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:initFullscreen() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:update() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getBufferStrategy() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getGraphics2D() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:getDisplayConfiguration() "/>
                    <element element=" Class: org.apogames.ApoScreen Method:addKeyboard(ApoKeyboard) "/>
                    <element element=" Class: org.apogames.ApoScreen Method:addMouse(ApoMouse) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:ApoSubGame(ApoScreen) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:init() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getScreen() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:run() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getKeyboard() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:shouldThink() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:setShouldThink(boolean) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:shouldRepaint() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:setShouldRepaint(boolean) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:think(long) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:addFrame() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getRenderTime() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getThinkTime() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:end(int) "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:getNextID() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:load() "/>
                    <element element=" Class: org.apogames.ApoSubGame Method:update(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:makeImageArray() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getImages() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getDirection() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setDirection(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:isBLoop() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setBLoop(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:isBAnimation() "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:setBAnimation(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:getWait() "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                    <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                    <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBOpaque() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBOpaque(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVelocityY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVelocityY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getVelocityX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setVelocityX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                    <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:ApoNewTextfield(float,float,float,float,Font) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getMaxLength() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setMaxLength(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:isBEnabled() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setBEnabled(boolean) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getFont() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setFont(Font) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mouseDragged(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mousePressed(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mouseReleased(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:nextSelectedPosition(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setSelectedPosition(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getThisPosition(int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getCurString() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getSelectedString() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteSelectedString() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:removeCurStringAndSetCurString(String) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setCurString(String) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getPosition() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setPosition(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextBackspace() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextDelete() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:addCharacter(int,char) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:showLine() "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoNewTextfield Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:ApoTextField(float,float,float,float) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:init() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:getFont() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:setFont(Font) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:getMaxLength() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:setMaxLength(int) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:getCurString() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:setCurString(String) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:getPosition() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:setPosition(int) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:deleteTextBackspace() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:deleteTextDelete() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:addCharacter(int,char) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:showLine() "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:think(int) "/>
                    <element element=" Class: org.apogames.entity.ApoTextField Method:render(Graphics2D,int,int) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                    <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                    <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                    <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                    <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getMd5Digest(String) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:setClipboardContents(String) "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:getClipboardContents() "/>
                    <element element=" Class: org.apogames.help.ApoHelp Method:rectangleContains(float,float,float,float,float,float) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                    <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                    <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                    <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:drawString(Graphics2D,String,int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color| int,int,String,Color,Color,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                    <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageCopy(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                    <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:ApoKeyboard() "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:isPressed(int) "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:getReleased() "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:getPressed() "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:keyPressed(KeyEvent) "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:keyReleased(KeyEvent) "/>
                    <element element=" Class: org.apogames.input.ApoKeyboard Method:keyTyped(KeyEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:ApoMouse() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:getX() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:getY() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:isDragged() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:getReleased() "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:hasClicked(int) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:mousePressed(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:mouseReleased(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:mouseMoved(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:mouseDragged(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:updateCoord(MouseEvent) "/>
                    <element element=" Class: org.apogames.input.ApoMouse Method:isMoved() "/>
                    <element element=" Class: org.apogames.sound.ApoMidi Method:addSong(String) "/>
                    <element element=" Class: org.apogames.sound.ApoMidi Method:startMusic(int) "/>
                    <element element=" Class: org.apogames.sound.ApoMidi Method:stopMusic() "/>
                    <element element=" Class: org.apogames.sound.ApoMidi Method:setVolume(int) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:ApoMidiPlayer() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:play(Sequence,boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:stop() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:close() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequencer() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:setPaused(boolean) "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:isPaused() "/>
                    <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:setVolume(int) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                    <element element=" Class: org.apogames.sound.ApoSounds Method:playSound(String) "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:ApoSoundThread(Runnable) "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:run() "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:pause(boolean| ) "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:stop() "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:isRunning() "/>
                    <element element=" Class: org.apogames.sound.ApoSoundThread Method:isPaused() "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:AudioPlayer(String,boolean) "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:start() "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:isBStop() "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:setBStop(boolean) "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:isBLoop() "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:setBLoop(boolean) "/>
                    <element element=" Class: org.apogames.sound.AudioPlayer Method:run() "/>
                </node>
            </node>
            <node name="Unique elements" number="540">
                <element element=" Class: apoMarc.ApoLibraryGame Method:ApoLibraryGame(String,ApoDisplayConfiguration) "/>
                <element element=" Class: apoMarc.ApoLibraryGame Method:run() "/>
                <element element=" Class: apoMarc.ApoLibraryGame Method:getScreen() "/>
                <element element=" Class: apoMarc.ApoLibraryGame Method:getDisplayConfiguration() "/>
                <element element=" Class: apoMarc.ApoLibraryGame Method:selectGame(int) "/>
                <element element=" Class: apoMarc.ApoMarcApplet Method:ApoMarcApplet() "/>
                <element element=" Class: apoMarc.ApoMarcApplet Method:stop() "/>
                <element element=" Class: apoMarc.ApoMarcApplet Method:destroy() "/>
                <element element=" Class: apoMarc.ApoMarcApplet Method:init() "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:ApoMarcGameComponent(ApoScreen) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:load() "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:isShowFPS() "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:setShowFPS(boolean) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:getButtons() "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:setButtons(ApoButton[]) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:getImages() "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:getFPS() "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:renderButtons(Graphics2D) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:update(long) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:think(long) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:keyPressed(int,char) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:keyReleased(int) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:mouseDragged(int,int) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:mouseMoved(int,int) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:mousePressed(int,int,boolean) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:mouseReleased(int,int,boolean) "/>
                <element element=" Class: apoMarc.ApoMarcGameComponent Method:setButtonFunction(String) "/>
                <element element=" Class: apoMarc.ApoMarcImages Method:ApoMarcImages() "/>
                <element element=" Class: apoMarc.ApoMarcImages Method:getImage(String,boolean) "/>
                <element element=" Class: apoMarc.ApoMarcImages Method:getLogo(BufferedImage) "/>
                <element element=" Class: apoMarc.ApoMarcImages Method:getImageMouseOver(BufferedImage| BufferedImage,int| BufferedImage,int,Color,int) "/>
                <element element=" Class: apoMarc.ApoMarcImages Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font,int) "/>
                <element element=" Class: apoMarc.ApoMarcImages Method:getButtonWithImage(int,int,BufferedImage,String,Color,Color,Color| int,int,BufferedImage,String,Color,Color,Color,Font) "/>
                <element element=" Class: apoMarc.ApoMarcMain Method:main(String[]) "/>
                <element element=" Class: apoMarc.ApoMarcMain Method:ApoMarcMain() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEffects Method:ApoMarcEffects(float,float,Color) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEffects Method:think(int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEffects Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:ApoMarcEntity(float,float,float,float,Color,boolean) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:init() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:getMaxTime() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:setMaxTime(int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:getMyOrgColor() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:makeEffects(int,int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:getMinWidth() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:setMinWidth(int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:getMaxWidth() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:setMaxWidth(int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:isBHitEffects() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:getMyColor() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:setMyColor(Color) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:getCurWidth() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:isBRepeat() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:setBRepeat(boolean) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:think(long,ApoMarcGame) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:littleMinSize() "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:thinkEntity(int,ApoMarcGame) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcEntity Method:renderEntity(Graphics2D) "/>
                <element element=" Class: apoMarc.entity.ApoMarcHelpButton Method:ApoMarcHelpButton(float,float,float,float,String| float,float,float,float,String,String) "/>
                <element element=" Class: apoMarc.entity.ApoMarcHelpButton Method:init() "/>
                <element element=" Class: apoMarc.entity.ApoMarcHelpButton Method:isBActive() "/>
                <element element=" Class: apoMarc.entity.ApoMarcHelpButton Method:setBActive(boolean) "/>
                <element element=" Class: apoMarc.entity.ApoMarcHelpButton Method:mouseReleased(int,int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcHelpButton Method:render(Graphics2D,int,int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPaddle Method:ApoMarcPaddle(float,float,float,Color,Rectangle2D.Float) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPaddle Method:init() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPaddle Method:isBFirstTouch() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPaddle Method:setBFirstTouch(boolean) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPaddle Method:thinkEntity(int,ApoMarcGame) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPaddle Method:littleMinSize() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPaddle Method:setNewPaddle(boolean) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPaddleAI Method:think(ApoMarcGame,ApoMarcPlayer,int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:ApoMarcPlayer(float,float,float,Color,boolean,Rectangle2D.Float) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:init() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:getDifficulty() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:setDifficulty(int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:getAi() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:setAi(ApoMarcPaddleAI) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:getSpeed() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:setSpeed(float) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:getLos() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:setLos(float) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:isBSelect() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:setBSelect(boolean) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:setNewPosition(float,float,ApoMarcGame) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:setNewSpeedAndPosition(int,ApoMarcGame,ApoMarcPlayer) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:checkPlayerIntersects(ApoMarcGame,float) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:setPaddleBackPlayer(ApoMarcPlayer,ApoMarcPaddle) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:setPaddleBackWall(ApoMarcWall,ApoMarcPaddle) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:intersects(float,float,float) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:getPoints() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:addOnePoint() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:thinkEntity(int,ApoMarcGame) "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:littleMinSize() "/>
                <element element=" Class: apoMarc.entity.ApoMarcPlayer Method:renderEntity(Graphics2D) "/>
                <element element=" Class: apoMarc.entity.ApoMarcWall Method:ApoMarcWall(float,float,float,float,int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcWall Method:init() "/>
                <element element=" Class: apoMarc.entity.ApoMarcWall Method:makeEffects(int,int) "/>
                <element element=" Class: apoMarc.entity.ApoMarcWall Method:littleMinSize() "/>
                <element element=" Class: apoMarc.entity.ApoMarcWall Method:thinkEntity(int,ApoMarcGame) "/>
                <element element=" Class: apoMarc.entity.ApoMarcWall Method:getColorOrder() "/>
                <element element=" Class: apoMarc.entity.ApoMarcWall Method:nextColor() "/>
                <element element=" Class: apoMarc.entity.ApoMarcWall Method:renderEntity(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcAchievements Method:ApoMarcAchievements(ApoMarcPanel) "/>
                <element element=" Class: apoMarc.game.ApoMarcAchievements Method:init() "/>
                <element element=" Class: apoMarc.game.ApoMarcAchievements Method:addAchievements(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcAchievements Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoMarc.game.ApoMarcAchievements Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcAchievements Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcAchievements Method:think(long) "/>
                <element element=" Class: apoMarc.game.ApoMarcAchievements Method:render(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcAchievements Method:drawApoAchievement(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcButtons Method:ApoMarcButtons(ApoMarcPanel) "/>
                <element element=" Class: apoMarc.game.ApoMarcButtons Method:init() "/>
                <element element=" Class: apoMarc.game.ApoMarcCredits Method:ApoMarcCredits(ApoMarcPanel) "/>
                <element element=" Class: apoMarc.game.ApoMarcCredits Method:init() "/>
                <element element=" Class: apoMarc.game.ApoMarcCredits Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoMarc.game.ApoMarcCredits Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcCredits Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcCredits Method:think(long) "/>
                <element element=" Class: apoMarc.game.ApoMarcCredits Method:render(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcDifficulty Method:ApoMarcDifficulty(ApoMarcPanel) "/>
                <element element=" Class: apoMarc.game.ApoMarcDifficulty Method:init() "/>
                <element element=" Class: apoMarc.game.ApoMarcDifficulty Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoMarc.game.ApoMarcDifficulty Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcDifficulty Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcDifficulty Method:think(long) "/>
                <element element=" Class: apoMarc.game.ApoMarcDifficulty Method:render(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:ApoMarcGame(ApoMarcPanel) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:init(int) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:restart() "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:setBPause(boolean) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:setBOver(boolean) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:isBPause() "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:getPaddle() "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:getWalls() "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:getPlayers() "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:setPause(boolean) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:mouseMoved(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:mouseDragged(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:mousePressed(int,int,boolean) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:think(long) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:render(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:drawStatistics(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcGame Method:drawOver(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcMenu Method:ApoMarcMenu(ApoMarcPanel) "/>
                <element element=" Class: apoMarc.game.ApoMarcMenu Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoMarc.game.ApoMarcMenu Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcMenu Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcMenu Method:think(long) "/>
                <element element=" Class: apoMarc.game.ApoMarcMenu Method:render(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:ApoMarcModel(ApoMarcPanel) "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:getGame() "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:init() "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:mouseMoved(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:mouseDragged(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:mousePressed(int,int,boolean) "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:think(long) "/>
                <element element=" Class: apoMarc.game.ApoMarcModel Method:render(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcOptions Method:ApoMarcOptions(ApoMarcPanel) "/>
                <element element=" Class: apoMarc.game.ApoMarcOptions Method:init() "/>
                <element element=" Class: apoMarc.game.ApoMarcOptions Method:keyButtonReleased(int,char) "/>
                <element element=" Class: apoMarc.game.ApoMarcOptions Method:mouseButtonFunction(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcOptions Method:mouseButtonReleased(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcOptions Method:think(long) "/>
                <element element=" Class: apoMarc.game.ApoMarcOptions Method:render(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:ApoMarcPanel(ApoScreen) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:load() "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:setMenu() "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:setGame(int) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:setDifficulty() "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:setAchievements() "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:setCredits() "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:setOptions() "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:setButtonVisible(boolean[]) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:keyReleased(int) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:setButtonFunction(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:mouseReleased(int,int,boolean) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:mousePressed(int,int,boolean) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:mouseMoved(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:mouseDragged(int,int) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:addAchievement(String) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:think(long) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:render(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:renderBackground(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:renderAchievements(Graphics2D) "/>
                <element element=" Class: apoMarc.game.ApoMarcPanel Method:renderFPS(Graphics2D) "/>
                <element element=" Class: org.apogames.ApoCanvas Method:paint(Graphics) "/>
                <element element=" Class: org.apogames.ApoCanvas Method:update(Graphics) "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:ApoDisplayConfiguration(int,int,int,boolean,boolean) "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isApplet() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isWidescreen() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getWidth() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getHeight() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:getDepth() "/>
                <element element=" Class: org.apogames.ApoDisplayConfiguration Method:isWindowed() "/>
                <element element=" Class: org.apogames.ApoIO Method:ApoIO() "/>
                <element element=" Class: org.apogames.ApoIO Method:writeLevel(String) "/>
                <element element=" Class: org.apogames.ApoLibraryGame Method:ApoLibraryGame(ApoSubGame) "/>
                <element element=" Class: org.apogames.ApoLibraryGame Method:run() "/>
                <element element=" Class: org.apogames.ApoLibraryGame Method:getScreen() "/>
                <element element=" Class: org.apogames.ApoLibraryGame Method:selectGame(int) "/>
                <element element=" Class: org.apogames.ApoScreen Method:ApoScreen(String,ApoDisplayConfiguration) "/>
                <element element=" Class: org.apogames.ApoScreen Method:init() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getComponent() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getFps() "/>
                <element element=" Class: org.apogames.ApoScreen Method:setFps(int) "/>
                <element element=" Class: org.apogames.ApoScreen Method:getSubGame() "/>
                <element element=" Class: org.apogames.ApoScreen Method:setSubGame(ApoSubGame) "/>
                <element element=" Class: org.apogames.ApoScreen Method:getParent() "/>
                <element element=" Class: org.apogames.ApoScreen Method:setParent(Component) "/>
                <element element=" Class: org.apogames.ApoScreen Method:initApplet() "/>
                <element element=" Class: org.apogames.ApoScreen Method:initWindowed() "/>
                <element element=" Class: org.apogames.ApoScreen Method:repaint() "/>
                <element element=" Class: org.apogames.ApoScreen Method:addWindowListener(JFrame) "/>
                <element element=" Class: org.apogames.ApoScreen Method:windowClosing(WindowEvent) "/>
                <element element=" Class: org.apogames.ApoScreen Method:quit() "/>
                <element element=" Class: org.apogames.ApoScreen Method:initFullscreen() "/>
                <element element=" Class: org.apogames.ApoScreen Method:update() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getBufferStrategy() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getGraphics2D() "/>
                <element element=" Class: org.apogames.ApoScreen Method:getDisplayConfiguration() "/>
                <element element=" Class: org.apogames.ApoScreen Method:addKeyboard(ApoKeyboard) "/>
                <element element=" Class: org.apogames.ApoScreen Method:addMouse(ApoMouse) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:ApoSubGame(ApoScreen) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:init() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:stopGame() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getScreen() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:run() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getKeyboard() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:shouldThink() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:setShouldThink(boolean) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:shouldRepaint() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:setShouldRepaint(boolean) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:think(long) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:render() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:addFrame() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getRenderTime() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getThinkTime() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:end(int) "/>
                <element element=" Class: org.apogames.ApoSubGame Method:getNextID() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:load() "/>
                <element element=" Class: org.apogames.ApoSubGame Method:update(long) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:isBLoop() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setBLoop(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:isBAnimation() "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:setBAnimation(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:setBVisible(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:notOver() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:getWait() "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String) "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                <element element=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                <element element=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBOpaque() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBOpaque(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getVecY() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setVecY(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getVecX() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setVecX(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:ApoNewTextfield(float,float,float,float,Font) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:init() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getMaxLength() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setMaxLength(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:isBEnabled() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setBEnabled(boolean) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getFont() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setFont(Font) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mouseDragged(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mousePressed(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:mouseReleased(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:nextSelectedPosition(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setSelectedPosition(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getThisPosition(int,int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getCurString() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getSelectedString() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteSelectedString() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:removeCurStringAndSetCurString(String) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setCurString(String) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:getPosition() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:setPosition(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextBackspace() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextDelete() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:addCharacter(int,char) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:showLine() "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoNewTextfield Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:ApoTextField(float,float,float,float) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:init() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:getFont() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:setFont(Font) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:getMaxLength() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:setMaxLength(int) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:getCurString() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:setCurString(String) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:getPosition() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:setPosition(int) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:deleteTextBackspace() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:deleteTextDelete() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:addCharacter(int,char) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:showLine() "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:think(int) "/>
                <element element=" Class: org.apogames.entity.ApoTextField Method:render(Graphics2D,int,int) "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                <element element=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                <element element=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                <element element=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                <element element=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                <element element=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                <element element=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                <element element=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                <element element=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                <element element=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                <element element=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getMd5Digest(String) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:setClipboardContents(String) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:getClipboardContents() "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:rectangleContains(float,float,float,float,float,float) "/>
                <element element=" Class: org.apogames.help.ApoHelp Method:drawSpeech(Graphics2D,String,int,int,int) "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:getInstance() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:ApoHighscore() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:getNames() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:getLevels() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:getPoints() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:clear() "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:save(int,int,String) "/>
                <element element=" Class: org.apogames.help.ApoHighscore Method:load() "/>
                <element element=" Class: org.apogames.help.ApoInterface Method:init() "/>
                <element element=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                <element element=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                <element element=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                <element element=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                <element element=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                <element element=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                <element element=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                <element element=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                <element element=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                <element element=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                <element element=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:drawString(Graphics2D,String,int,int,int) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                <element element=" Class: org.apogames.image.ApoImageFromValue Method:getImageCopy(BufferedImage) "/>
                <element element=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                <element element=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                <element element=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                <element element=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                <element element=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                <element element=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:ApoKeyboard() "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:isPressed(int) "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:getReleased() "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:getPressed() "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:keyPressed(KeyEvent) "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:keyReleased(KeyEvent) "/>
                <element element=" Class: org.apogames.input.ApoKeyboard Method:keyTyped(KeyEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:ApoMouse() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:getX() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:getY() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:isDragged() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:getReleased() "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:hasClicked(int) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:mousePressed(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:mouseReleased(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:mouseMoved(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:mouseDragged(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:updateCoord(MouseEvent) "/>
                <element element=" Class: org.apogames.input.ApoMouse Method:isMoved() "/>
                <element element=" Class: org.apogames.sound.ApoMidi Method:addSong(String) "/>
                <element element=" Class: org.apogames.sound.ApoMidi Method:startMusic(int) "/>
                <element element=" Class: org.apogames.sound.ApoMidi Method:stopMusic() "/>
                <element element=" Class: org.apogames.sound.ApoMidi Method:setVolume(int) "/>
                <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:ApoMidiPlayer() "/>
                <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:play(Sequence,boolean) "/>
                <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:stop() "/>
                <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:close() "/>
                <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequencer() "/>
                <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:setPaused(boolean) "/>
                <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:isPaused() "/>
                <element element=" Class: org.apogames.sound.ApoMidiPlayer Method:setVolume(int) "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:getCurrentTime() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:isLoopPlay() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:setLoopPlay(Boolean) "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:stop() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:play() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:getVolume() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:setVolumen(int) "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:run() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:setSong(String) "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:getSong() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:getSongTime() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:reset(boolean) "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:isPlaying() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:setPause(boolean) "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:isPause() "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:setMute(boolean) "/>
                <element element=" Class: org.apogames.sound.ApoMP3Sound Method:isMute() "/>
                <element element=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                <element element=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                <element element=" Class: org.apogames.sound.ApoSoundThread Method:ApoSoundThread(Runnable) "/>
                <element element=" Class: org.apogames.sound.ApoSoundThread Method:start() "/>
                <element element=" Class: org.apogames.sound.ApoSoundThread Method:run() "/>
                <element element=" Class: org.apogames.sound.ApoSoundThread Method:pause(boolean| ) "/>
                <element element=" Class: org.apogames.sound.ApoSoundThread Method:stop() "/>
                <element element=" Class: org.apogames.sound.ApoSoundThread Method:isRunning() "/>
                <element element=" Class: org.apogames.sound.ApoSoundThread Method:isPaused() "/>
                <element element=" Class: org.apogames.sound.AudioPlayer Method:AudioPlayer(String,boolean) "/>
                <element element=" Class: org.apogames.sound.AudioPlayer Method:start() "/>
                <element element=" Class: org.apogames.sound.AudioPlayer Method:isBStop() "/>
                <element element=" Class: org.apogames.sound.AudioPlayer Method:setBStop(boolean) "/>
                <element element=" Class: org.apogames.sound.AudioPlayer Method:isBLoop() "/>
                <element element=" Class: org.apogames.sound.AudioPlayer Method:setBLoop(boolean) "/>
                <element element=" Class: org.apogames.sound.AudioPlayer Method:run() "/>
                <element element=" Class: org.apogames.subgame.ApoGamePanel Method:ApoGamePanel(ApoScreen) "/>
                <element element=" Class: org.apogames.subgame.ApoGamePanel Method:update(long) "/>
                <element element=" Class: org.apogames.subgame.ApoGamePanel Method:think(long) "/>
                <element element=" Class: org.apogames.subgame.ApoGamePanel Method:keyPressed(int,char) "/>
                <element element=" Class: org.apogames.subgame.ApoGamePanel Method:keyReleased(int) "/>
                <element element=" Class: org.apogames.subgame.ApoGamePanel Method:mouseDragged(int,int) "/>
                <element element=" Class: org.apogames.subgame.ApoGamePanel Method:mouseMoved(int,int) "/>
                <element element=" Class: org.apogames.subgame.ApoGamePanel Method:mousePressed(int,int,boolean) "/>
                <element element=" Class: org.apogames.subgame.ApoGamePanel Method:mouseReleased(int,int,boolean) "/>
            </node>
        </node>
    </StatReuse>
    <BlockReuseAnalyse>
        <node name="Block 07" nbartefacts="3" nbelems="499">
            <artefacts>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot" percentage="97.08171206225681"/>
                <artefact name="ApoIcarus" percentage="47.70554493307839"/>
                <artefact name="ApoMarc" percentage="26.07105538140021"/>
            </artefacts>
            <content>
                <element name=" Class: apoBot.ApoBotApplet Method:ApoBotApplet(| int,int) "/>
                <element name=" Class: apoBot.ApoBotApplet Method:init() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:ApoBotComponent(boolean,boolean,int,int) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:init() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:levelLoad(String) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:levelSave() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:saveLevel(String) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:loadLevel(String) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getCurLevel() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setCurLevel(int) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getIButtonEmpty() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getPlayer() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getIPlayer() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setIPlayer(BufferedImage) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getLevel() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getILevel() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setLevel(ApoBotLevel) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getIBackgroundOriginal() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setIBackgroundOriginal(BufferedImage) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:makeBackground() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:centerCamera() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getITile() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setITile(BufferedImage) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getLevelWidth() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setLevelWidth(int) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getLevelHeight() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setLevelHeight(int) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getIBackground() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setIBackground(BufferedImage) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getImage() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getCurWidth() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getCurHeight() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setCurX(int) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setCurY(int) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:restart() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:think(int) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setButtonFunction(String) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setMouseFunction(String) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:setKeyFunction(int) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:keyReleased(KeyEvent) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:keyPressed(KeyEvent) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:mouseReleased(MouseEvent) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:mousePressed(MouseEvent) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:mouseDragged(MouseEvent) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:isLevelToWidth() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:isLevelToHeight() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getStartX() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getStartY() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getCurX() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:getCurY() "/>
                <element name=" Class: apoBot.ApoBotComponent Method:renderLevel(Graphics2D,BufferedImage,ApoBotLevel| Graphics2D,BufferedImage,ApoBotLevel,boolean) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:renderPlayer(Graphics2D,int,int,ApoBotLevel) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:renderOvertile(Graphics2D,int,int,int,int,int,ApoBotLevel) "/>
                <element name=" Class: apoBot.ApoBotComponent Method:renderTile(Graphics2D,int,int,int,int,int) "/>
                <element name=" Class: apoBot.ApoBotImage Method:ApoBotImage() "/>
                <element name=" Class: apoBot.ApoBotImage Method:getImage(String,boolean) "/>
                <element name=" Class: apoBot.ApoBotImage Method:drawString(Graphics2D,String,int,int,int) "/>
                <element name=" Class: apoBot.ApoBotImage Method:getLogo(int,int,BufferedImage) "/>
                <element name=" Class: apoBot.ApoBotImage Method:getIBackground(BufferedImage,int,int,int,int,int| ApoBotLevel,BufferedImage,int,int) "/>
                <element name=" Class: apoBot.ApoBotImage Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                <element name=" Class: apoBot.ApoBotImage Method:getButtonImage(int,int,String,Color,Color,Color,Color,Color,Font| int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color) "/>
                <element name=" Class: apoBot.ApoBotImage Method:getImageCopy(BufferedImage) "/>
                <element name=" Class: apoBot.ApoBotMain Method:main(String[]) "/>
                <element name=" Class: apoBot.ApoBotMain Method:ApoBotMain(String) "/>
                <element name=" Class: apoBot.ApoBotMain Method:init() "/>
                <element name=" Class: apoBot.ApoBotMain Method:windowClosing(WindowEvent) "/>
                <element name=" Class: apoBot.entity.ApoBotEntity Method:ApoBotEntity(int,float,float,float,float) "/>
                <element name=" Class: apoBot.entity.ApoBotEntity Method:getCommand() "/>
                <element name=" Class: apoBot.entity.ApoBotEntity Method:setCommand(int) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:ApoBotPlayer(BufferedImage,float,float,float,float,int,long) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:init() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:isBUp() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:setBUp(boolean) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:getJumpHeight() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:setJumpHeight(float) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:getCurJumpHeight() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:setCurJumpHeight(float) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:isBJump() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:setBJump(boolean) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:getRunX() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:setRunX(float) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:getRunY() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:setRunY(float) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:isBRun() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:setBRun(boolean) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:getStartDir() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:setStartDir(int) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:getCurDir() "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:setCurDir(int) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:think(int) "/>
                <element name=" Class: apoBot.entity.ApoBotPlayer Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoBot.game.ApoBotButton Method:ApoBotButton(ApoBotComponent) "/>
                <element name=" Class: apoBot.game.ApoBotButton Method:init() "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:ApoBotEditor(ApoBotGame) "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:init() "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:getLevels() "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:loadLevel(String) "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:saveLevel(String) "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:getLevel(int) "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:getMaxLevel() "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:getCurTile() "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:setCurTile(int) "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:mouseFunction(String) "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:mouseReleased(MouseEvent) "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:mouseClick(int,int,int) "/>
                <element name=" Class: apoBot.game.ApoBotEditor Method:renderEditor(Graphics2D) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:ApoBotGame(boolean,boolean,int,int) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:init() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:loadLevel(String) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:saveLevel(String) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:addLevelToIO(ApoBotLevel) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:setMenu() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:setGame() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:setTutorial() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:setEditor() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:setKeyFunction(int) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:setMouseFunction(String) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:nextLevelChange(int) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:nextLevel(int) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:mouseWheelMoved(MouseWheelEvent) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:mouseReleased(MouseEvent) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:mousePressed(MouseEvent) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:mouseDragged(MouseEvent) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:reset() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:restart() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:getNextCommand() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:setLevel(ApoBotLevel) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:stopGo() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:isLevelWin() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:think(int) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:thinkMove(int) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:nextCommand(int) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:canPlayerRun() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:canPlayerJump() "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:render(Graphics2D) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:renderFPS(Graphics2D,float) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:renderMenu(Graphics2D) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:renderMouseImage(Graphics2D) "/>
                <element name=" Class: apoBot.game.ApoBotGame Method:renderWin(Graphics2D) "/>
                <element name=" Class: apoBot.game.ApoBotTutorial Method:ApoBotTutorial(ApoBotGame) "/>
                <element name=" Class: apoBot.game.ApoBotTutorial Method:init() "/>
                <element name=" Class: apoBot.game.ApoBotTutorial Method:canGo() "/>
                <element name=" Class: apoBot.game.ApoBotTutorial Method:keyPressed(int) "/>
                <element name=" Class: apoBot.game.ApoBotTutorial Method:nextStep() "/>
                <element name=" Class: apoBot.game.ApoBotTutorial Method:think(int) "/>
                <element name=" Class: apoBot.game.ApoBotTutorial Method:renderMenuTutorial(Graphics2D) "/>
                <element name=" Class: apoBot.game.ApoBotTutorial Method:drawArrow(Graphics2D,int,int,int) "/>
                <element name=" Class: apoBot.game.ApoBotTutorial Method:drawSpeech(Graphics2D,String) "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:ApoBotLevel(| int,int| ApoBotLevelLevel[][],Point,int,int[]) "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:init() "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:getCommandsMenu() "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:setCommandsMenu(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:getFunctionsOneMenu() "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:setFunctionsOneMenu(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:getFunctionsTwoMenu() "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:setFunctionsTwoMenu(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:getLevel() "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:setLevel(ApoBotLevelLevel[][]) "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:getStartPoint() "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:setStartPoint(Point) "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:getDirectionView() "/>
                <element name=" Class: apoBot.level.ApoBotLevel Method:setDirectionView(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:ApoBotLevelIO() "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:getLevel(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:getMaxLevel() "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:getLevels() "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:setLevels(ArrayList&lt;ApoBotLevel&gt;) "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:addLevel(ApoBotLevel,int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:changeLevel(int,int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:removeLevel(ApoBotLevel| int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:readLevel(DataInputStream) "/>
                <element name=" Class: apoBot.level.ApoBotLevelIO Method:writeLevel(DataOutputStream) "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:ApoBotLevelLevel(int,int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:init() "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:getStartGround() "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:setStartGround(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:getStartHeight() "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:setStartHeight(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:getGround() "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:setGround(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:getHeight() "/>
                <element name=" Class: apoBot.level.ApoBotLevelLevel Method:setHeight(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelTest Method:ApoBotLevelTest() "/>
                <element name=" Class: apoBot.level.ApoBotLevelTest Method:getLevel(int) "/>
                <element name=" Class: apoBot.level.ApoBotLevelTest Method:makeLevelOne() "/>
                <element name=" Class: apoBot.level.ApoBotLevelTest Method:getMenuLevel() "/>
                <element name=" Class: org.apogames.ApoApplet Method:ApoApplet(int,int) "/>
                <element name=" Class: org.apogames.ApoApplet Method:init() "/>
                <element name=" Class: org.apogames.ApoApplet Method:destroy() "/>
                <element name=" Class: org.apogames.ApoApplet Method:setComponent(ApoComponent) "/>
                <element name=" Class: org.apogames.ApoAppletBufferedStrategy Method:ApoAppletBufferedStrategy(int,int) "/>
                <element name=" Class: org.apogames.ApoAppletBufferedStrategy Method:init() "/>
                <element name=" Class: org.apogames.ApoAppletBufferedStrategy Method:destroy() "/>
                <element name=" Class: org.apogames.ApoAppletBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                <element name=" Class: org.apogames.ApoComponent Method:ApoComponent(boolean,boolean,int| boolean,boolean,int,int) "/>
                <element name=" Class: org.apogames.ApoComponent Method:getButtons() "/>
                <element name=" Class: org.apogames.ApoComponent Method:setButtons(ApoButton[]) "/>
                <element name=" Class: org.apogames.ApoComponent Method:init() "/>
                <element name=" Class: org.apogames.ApoComponent Method:keyTyped(KeyEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:keyPressed(KeyEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:keyReleased(KeyEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:think(int) "/>
                <element name=" Class: org.apogames.ApoComponent Method:render(| Graphics2D) "/>
                <element name=" Class: org.apogames.ApoComponent Method:paintComponent(Graphics) "/>
                <element name=" Class: org.apogames.ApoComponent Method:start() "/>
                <element name=" Class: org.apogames.ApoComponent Method:stop() "/>
                <element name=" Class: org.apogames.ApoComponent Method:setRestartThreadValues() "/>
                <element name=" Class: org.apogames.ApoComponent Method:getFPS() "/>
                <element name=" Class: org.apogames.ApoComponent Method:renderFPS(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.ApoComponent Method:renderButtons(Graphics2D) "/>
                <element name=" Class: org.apogames.ApoComponent Method:isBThink() "/>
                <element name=" Class: org.apogames.ApoComponent Method:setBThink(boolean) "/>
                <element name=" Class: org.apogames.ApoComponent Method:isBRepaint() "/>
                <element name=" Class: org.apogames.ApoComponent Method:setBRepaint(boolean) "/>
                <element name=" Class: org.apogames.ApoComponent Method:getBDirections() "/>
                <element name=" Class: org.apogames.ApoComponent Method:setBDirections(boolean[]) "/>
                <element name=" Class: org.apogames.ApoComponent Method:isBBack() "/>
                <element name=" Class: org.apogames.ApoComponent Method:setBBack(boolean) "/>
                <element name=" Class: org.apogames.ApoComponent Method:isBLoose() "/>
                <element name=" Class: org.apogames.ApoComponent Method:setBLoose(boolean) "/>
                <element name=" Class: org.apogames.ApoComponent Method:isBWin() "/>
                <element name=" Class: org.apogames.ApoComponent Method:setBWin(boolean) "/>
                <element name=" Class: org.apogames.ApoComponent Method:isBHelp() "/>
                <element name=" Class: org.apogames.ApoComponent Method:setBHelp(boolean) "/>
                <element name=" Class: org.apogames.ApoComponent Method:mouseMoved(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:mousePressed(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:mouseReleased(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:mouseDragged(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:mouseClicked(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:mouseEntered(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:mouseExited(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:mouseWheelMoved(MouseWheelEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:setButtonFunction(String) "/>
                <element name=" Class: org.apogames.ApoComponent Method:focusGained(FocusEvent) "/>
                <element name=" Class: org.apogames.ApoComponent Method:focusLost(FocusEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:ApoComponentBufferedStrategy(boolean,boolean,int| boolean,boolean,int,int| boolean,boolean,int,int,boolean) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:getWAIT_TIME_RENDER() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setWAIT_TIME_RENDER(int) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:getButtons() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtons(ApoButton[]) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:init() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyTyped(KeyEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyPressed(KeyEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:keyReleased(KeyEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setButtonFunction(String) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:think(int) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:render(Graphics2D| ) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:createBackbuffer() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:checkBackbuffer() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setRestartThreadValues() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderFPS(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:renderButtons(Graphics2D) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:start() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:stop() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:getFPS() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBThink() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBThink(boolean) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBRepaint() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBRepaint(boolean) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:getBDirections() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBDirections(boolean[]) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBBack() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBBack(boolean) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBLoose() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBLoose(boolean) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBWin() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBWin(boolean) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:isBHelp() "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:setBHelp(boolean) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseMoved(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:mousePressed(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseReleased(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseDragged(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseClicked(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseEntered(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseExited(MouseEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:mouseWheelMoved(MouseWheelEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusGained(FocusEvent) "/>
                <element name=" Class: org.apogames.ApoComponentBufferedStrategy Method:focusLost(FocusEvent) "/>
                <element name=" Class: org.apogames.ApoIO Method:ApoIO(| String,String) "/>
                <element name=" Class: org.apogames.ApoIO Method:getLevelName() "/>
                <element name=" Class: org.apogames.ApoIO Method:setLevelName(String) "/>
                <element name=" Class: org.apogames.ApoIO Method:getFileEnding() "/>
                <element name=" Class: org.apogames.ApoIO Method:setFileEnding(String) "/>
                <element name=" Class: org.apogames.ApoIO Method:getCurrentLevel() "/>
                <element name=" Class: org.apogames.ApoIO Method:setCurrentLevel(int) "/>
                <element name=" Class: org.apogames.ApoIO Method:getMaxLevel() "/>
                <element name=" Class: org.apogames.ApoIO Method:setMaxLevel(int) "/>
                <element name=" Class: org.apogames.ApoIO Method:hasNextLevel(| boolean) "/>
                <element name=" Class: org.apogames.ApoMain Method:ApoMain(String| String,int,int) "/>
                <element name=" Class: org.apogames.ApoMain Method:initWindow() "/>
                <element name=" Class: org.apogames.ApoMain Method:setComponent(ApoComponent) "/>
                <element name=" Class: org.apogames.ApoMain Method:init() "/>
                <element name=" Class: org.apogames.ApoMainBufferedStrategy Method:ApoMainBufferedStrategy(String| String,int,int) "/>
                <element name=" Class: org.apogames.ApoMainBufferedStrategy Method:initWindow() "/>
                <element name=" Class: org.apogames.ApoMainBufferedStrategy Method:setComponent(ApoComponentBufferedStrategy) "/>
                <element name=" Class: org.apogames.ApoMainBufferedStrategy Method:init() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:ApoNewThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                <element name=" Class: org.apogames.ApoNewThread Method:isBThink() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:setBThink(boolean) "/>
                <element name=" Class: org.apogames.ApoNewThread Method:isBRender() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:setBRender(boolean) "/>
                <element name=" Class: org.apogames.ApoNewThread Method:getFps() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:getWait() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:setWait(long) "/>
                <element name=" Class: org.apogames.ApoNewThread Method:getWaitRender() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:setWaitRender(long) "/>
                <element name=" Class: org.apogames.ApoNewThread Method:start() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:stop() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:isBRunning() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:setBRunning(boolean) "/>
                <element name=" Class: org.apogames.ApoNewThread Method:run() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:computeDelta() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:setRestart() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:think() "/>
                <element name=" Class: org.apogames.ApoNewThread Method:render() "/>
                <element name=" Class: org.apogames.ApoStart Method:ApoStart() "/>
                <element name=" Class: org.apogames.ApoStart Method:main(String[]) "/>
                <element name=" Class: org.apogames.ApoThread Method:ApoThread(ApoTimerInterface,long| ApoTimerInterface,long,long| ApoTimerInterface,long,long,boolean,boolean) "/>
                <element name=" Class: org.apogames.ApoThread Method:isBThink() "/>
                <element name=" Class: org.apogames.ApoThread Method:setBThink(boolean) "/>
                <element name=" Class: org.apogames.ApoThread Method:isBRender() "/>
                <element name=" Class: org.apogames.ApoThread Method:setBRender(boolean) "/>
                <element name=" Class: org.apogames.ApoThread Method:getFps() "/>
                <element name=" Class: org.apogames.ApoThread Method:getWait() "/>
                <element name=" Class: org.apogames.ApoThread Method:setWait(long) "/>
                <element name=" Class: org.apogames.ApoThread Method:getWaitRender() "/>
                <element name=" Class: org.apogames.ApoThread Method:setWaitRender(long) "/>
                <element name=" Class: org.apogames.ApoThread Method:start() "/>
                <element name=" Class: org.apogames.ApoThread Method:stop() "/>
                <element name=" Class: org.apogames.ApoThread Method:isBRunning() "/>
                <element name=" Class: org.apogames.ApoThread Method:setBRunning(boolean) "/>
                <element name=" Class: org.apogames.ApoThread Method:run() "/>
                <element name=" Class: org.apogames.ApoThread Method:computeDelta() "/>
                <element name=" Class: org.apogames.ApoThread Method:setRestart() "/>
                <element name=" Class: org.apogames.ApoThread Method:think() "/>
                <element name=" Class: org.apogames.ApoThread Method:render() "/>
                <element name=" Class: org.apogames.ApoTimer Method:ApoTimer(ApoTimerInterface,long) "/>
                <element name=" Class: org.apogames.ApoTimer Method:isBWait() "/>
                <element name=" Class: org.apogames.ApoTimer Method:setBWait(boolean) "/>
                <element name=" Class: org.apogames.ApoTimer Method:isBRender() "/>
                <element name=" Class: org.apogames.ApoTimer Method:setBRender(boolean) "/>
                <element name=" Class: org.apogames.ApoTimer Method:getWait() "/>
                <element name=" Class: org.apogames.ApoTimer Method:setWait(long) "/>
                <element name=" Class: org.apogames.ApoTimer Method:start() "/>
                <element name=" Class: org.apogames.ApoTimer Method:stop() "/>
                <element name=" Class: org.apogames.ApoTimer Method:isBRunning() "/>
                <element name=" Class: org.apogames.ApoTimer Method:setBRunning(boolean) "/>
                <element name=" Class: org.apogames.ApoTimer Method:getFps() "/>
                <element name=" Class: org.apogames.ApoTimer Method:run() "/>
                <element name=" Class: org.apogames.ApoTimerInterface Method:think(int) "/>
                <element name=" Class: org.apogames.ApoTimerInterface Method:render() "/>
                <element name=" Class: org.apogames.ApoTimerInterface Method:isBThink() "/>
                <element name=" Class: org.apogames.ApoTimerInterface Method:isBRepaint() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getVecY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setVecY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getVecX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setVecX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:init() "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                <element name=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                <element name=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                <element name=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                <element name=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:loopSound(String) "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:stopLoopingSound() "/>
            </content>
        </node>
        <node name="Block 00" nbartefacts="4" nbelems="6">
            <artefacts>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot" percentage="1.1673151750972763"/>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando" percentage="0.6952491309385863"/>
                <artefact name="ApoIcarus" percentage="0.5736137667304015"/>
                <artefact name="ApoMarc" percentage="0.3134796238244514"/>
            </artefacts>
            <content>
                <element name=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                <element name=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                <element name=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                <element name=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
                <element name=" Class: org.apogames.ApoIO Method:writeLevel(String| DataOutputStream) "/>
                <element name=" Class: org.apogames.ApoIO Method:readLevel(String| boolean,String| boolean,String,boolean| DataInputStream) "/>
            </content>
        </node>
        <node name="Block 01" nbartefacts="3" nbelems="10">
            <artefacts>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando" percentage="1.1587485515643106"/>
                <artefact name="ApoIcarus" percentage="0.9560229445506693"/>
                <artefact name="ApoMarc" percentage="0.522466039707419"/>
            </artefacts>
            <content>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:render(| Graphics2D) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long| BufferedImage,float,float,float,float,int,long,int,boolean| BufferedImage,float,float,float,float,int,long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getCopy(boolean[]| byte[][]| int[][]) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int| int,int,Color) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float| ApoEntity,float,float| ApoEntity,float,float,float,float| ApoEntity,ApoEntity) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D| Graphics2D,int,int) "/>
            </content>
        </node>
        <node name="Block 08" nbartefacts="2" nbelems="835">
            <artefacts>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando" percentage="96.75550405561994"/>
                <artefact name="ApoMarc" percentage="43.62591431556949"/>
            </artefacts>
            <content>
                <element name=" Class: apoCommando.ApoMarioApplet Method:ApoMarioApplet() "/>
                <element name=" Class: apoCommando.ApoMarioApplet Method:stop() "/>
                <element name=" Class: apoCommando.ApoMarioApplet Method:destroy() "/>
                <element name=" Class: apoCommando.ApoMarioApplet Method:init() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:ApoMarioGameComponent(ApoScreen) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:load() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:getChangeX() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:setChangeX(float) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:getChangeY() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:setChangeY(float) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:isBPause() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:setBPause(boolean) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:getResizeImage(BufferedImage) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:getLevel() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:setLevel(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:isShowFPS() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:setShowFPS(boolean) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:getButtons() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:setButtons(ApoButton[]) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:getImages() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:getFPS() "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:renderButtons(Graphics2D) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:update(long) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:think(long) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:keyPressed(int,char) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:keyReleased(int,char) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:mouseDragged(int,int,boolean) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:mouseMoved(int,int) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:mouseReleased(int,int,boolean) "/>
                <element name=" Class: apoCommando.ApoMarioGameComponent Method:setButtonFunction(String) "/>
                <element name=" Class: apoCommando.ApoMarioImageContainer Method:init(ApoMarioGameComponent) "/>
                <element name=" Class: apoCommando.ApoMarioImageContainer Method:setTileSet(int) "/>
                <element name=" Class: apoCommando.ApoMarioImages Method:ApoMarioImages() "/>
                <element name=" Class: apoCommando.ApoMarioImages Method:getImage(String,boolean) "/>
                <element name=" Class: apoCommando.ApoMarioImages Method:getBackgroundBack(BufferedImage,int,int) "/>
                <element name=" Class: apoCommando.ApoMarioImages Method:getBackgroundFront(BufferedImage,int,int) "/>
                <element name=" Class: apoCommando.ApoMarioImages Method:drawBackground(Graphics2D,BufferedImage,int,int,int) "/>
                <element name=" Class: apoCommando.ApoMarioImages Method:getLogo(BufferedImage) "/>
                <element name=" Class: apoCommando.ApoMarioImages Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font,int) "/>
                <element name=" Class: apoCommando.ApoMarioImages Method:getButtonWithImage(int,int,BufferedImage,String,Color,Color,Color| int,int,BufferedImage,String,Color,Color,Color,Font) "/>
                <element name=" Class: apoCommando.ApoMarioMain Method:main(String[]) "/>
                <element name=" Class: apoCommando.ApoMarioMain Method:ApoMarioMain() "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannon Method:ApoMarioCannon(BufferedImage,BufferedImage,float,float,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannon Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannon Method:getCannons() "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannon Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannon Method:thinkCanon(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannon Method:makeCannon(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannon Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannonCannon Method:ApoMarioCannonCannon(BufferedImage,float,float,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannonCannon Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannonCannon Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannonCannon Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannonCannon Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCannonCannon Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:ApoMarioCoin(BufferedImage,BufferedImage,float,float,int,long,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:getCurY() "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:setCurY(float) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:setBVisible(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:coinCheck(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:xCheckChange(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:yCheckUp(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoin Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoinParticle Method:ApoMarioCoinParticle(BufferedImage,BufferedImage,float,float,int,long) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoinParticle Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioCoinParticle Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioDestructableWall Method:ApoMarioDestructableWall(BufferedImage,BufferedImage,float,float,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioDestructableWall Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioDestructableWall Method:getParticle() "/>
                <element name=" Class: apoCommando.entity.ApoMarioDestructableWall Method:isBWall() "/>
                <element name=" Class: apoCommando.entity.ApoMarioDestructableWall Method:makeParticle() "/>
                <element name=" Class: apoCommando.entity.ApoMarioDestructableWall Method:damageWall(ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioDestructableWall Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioDestructableWall Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:ApoMarioEnd(float,float,float,float,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:hitTheBar(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:coinCheck(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:xCheckChange(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:yCheckUp(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnd Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:ApoMarioEnemy(BufferedImage,float,float,float,float,int,long,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:getChangeY() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:setChangeY(float) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:isBImmortal() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:setBImmortal(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:isBDie() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:setBDie(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:isBFall() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:setBFall(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:isBFlyOriginal() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:setBFlyOriginal(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:getPoints() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:setPoints(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:isBFly() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:setBFly(boolean| boolean,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:getMirrorImage(BufferedImage) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:die(ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:thinkJump(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:thinkSpeedAndMoveEnemy(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:nextYCheck(int,ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:downCheck() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:coinCheck(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:xCheckChange(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:yCheckUp(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEnemy Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:ApoMarioEntity(BufferedImage,float,float,float,float,int,long,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:getId() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:getDirection() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:changeDirection() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:setDirection(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:getLevel() "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:setLevel(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:yDownCheckEntity(ApoMarioLevel,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:nextYCheck(int,ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:coinCheck(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:yCheckUp(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:xCheckChange(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:thinkCollision(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:xChange(ApoMarioLevel,int,int,Rectangle2D.Float,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:makeParticles(float,float,float,float) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:getMinMax(ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioEntity Method:renderImage(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:ApoMarioFireball(BufferedImage,float,float,int,long,boolean,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:setVelocityX(float) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:checkWall(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:intersectsWithEnemy(ApoMarioEnemy,ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:nextYCheck(int,ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:downCheck() "/>
                <element name=" Class: apoCommando.entity.ApoMarioFireball Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFlower Method:ApoMarioFlower(BufferedImage,float,float,float,float,int,long,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFlower Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioFlower Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFlower Method:getMyChangeY() "/>
                <element name=" Class: apoCommando.entity.ApoMarioFlower Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioFlower Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioFlower Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGoodieFireflower Method:ApoMarioGoodieFireflower(BufferedImage,float,float,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGoodieFireflower Method:catchMe(ApoMarioPlayer) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:ApoMarioGoodieMushroom(BufferedImage,float,float,boolean,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:catchMe(ApoMarioPlayer) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGoodieMushroom Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGumba Method:ApoMarioGumba(BufferedImage,float,float,float,float,int,long,boolean,boolean,boolean,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGumba Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioGumba Method:isBLeft() "/>
                <element name=" Class: apoCommando.entity.ApoMarioGumba Method:setVelocityX(float) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGumba Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGumba Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioGumba Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioGumba Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioKoopa Method:ApoMarioKoopa(BufferedImage,float,float,float,float,int,long,boolean,boolean,boolean,boolean,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioKoopa Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioKoopa Method:die(ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioKoopa Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioKoopa Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioParticle Method:ApoMarioParticle(BufferedImage,float,float,int,long) "/>
                <element name=" Class: apoCommando.entity.ApoMarioParticle Method:think(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioParticle Method:coinCheck(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioParticle Method:xCheckChange(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioParticle Method:yCheckUp(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioParticle Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:ApoMarioPlayer(float,float,float,float,int,long,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getTeamName() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getAuthor() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setTeamName(String) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setAuthor(String) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:addMessage(String) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:isBDie() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getChangeY() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getCoins() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setCoins(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getPoints() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setPoints(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getAi() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setAi(String) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getDamageTime() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setDamageTime(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:damagePlayer() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:catchMushroom() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:catchFireflower() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getType() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setType(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:playerDie() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:isBGodMode() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setBGodMode(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getGoalVecX() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setGoalVecX(float) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getLevelX() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getLevelY() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:isBSpeed() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getPlayer() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setBSpeed(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:addFireBall() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:isBDown() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setBDown(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:canStandUp(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:isBJump() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setBJump(boolean,boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:isBEnemyJump() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:setEnemyJump() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getFireballs() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:thinkAI(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:thinkSpeedAndMovePlayer(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:yDownCheckEntity(ApoMarioLevel,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:test(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:testNewY(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:coinCheck(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:yCheckUp(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:xCheckChange(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioPlayer Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioQuestionmark Method:ApoMarioQuestionmark(BufferedImage,BufferedImage,float,float,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioQuestionmark Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioQuestionmark Method:damageWall(ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioQuestionmark Method:isBWall() "/>
                <element name=" Class: apoCommando.entity.ApoMarioQuestionmark Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioQuestionmark Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:ApoMarioShell(BufferedImage,float,float,float,float,int,long,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:getPlayer() "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:setPlayer(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:getRec() "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:getNextRec(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:thinkJump(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:damageCheck(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:intersectsWithEnemy(ApoMarioEnemy,ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioShell Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:ApoMarioWall(BufferedImage,float,float,int| BufferedImage,float,float,boolean,int| BufferedImage,float,float,float,float,boolean,int| BufferedImage,float,float,float,float,int,int,boolean,int| BufferedImage,float,float,float,float,int,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:init() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:addGoodie(ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:isBCanBeUp() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:setBCanBeUp(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:getCurChangeY() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:setCurChangeY(float) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:getChangeY() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:setChangeY(float) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:isBUp() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:setBUp(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:isBNoCollision() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:setBNoCollision(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:isBOnlyAboveWall() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:setBOnlyAboveWall(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:enemyCheck(ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:getGoodie() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:setGoodie(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:isBDestructable() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:setBDestructable(boolean) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:getTimeToRepeat() "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:setTimeToRepeat(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:damageWall(ApoMarioLevel,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:think(int,ApoMarioLevel) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:thinkBeUp(int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:coinCheck(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:xCheckChange(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:yCheckUp(ApoMarioLevel,int,int) "/>
                <element name=" Class: apoCommando.entity.ApoMarioWall Method:yDownCheck(ApoMarioLevel,int,int,int) "/>
                <element name=" Class: apoCommando.game.ApoMarioButtons Method:ApoMarioButtons(ApoMarioPanel) "/>
                <element name=" Class: apoCommando.game.ApoMarioButtons Method:makeButtons() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:ApoMarioPanel(ApoScreen) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:init() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:isBWin() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:setBWin(boolean) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:newAchievement() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:getAchievements() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:getAllCommands() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:setAllCommands(ArrayList&lt;ApoMarioStats&gt;) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:setDebugMode(boolean) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:getSpeedCounter() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:setSpeedCounter(int) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:isBJump() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:setBJump(boolean) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:getBackgroundImage() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:getGame() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:setGame(boolean) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:isBFirstStart() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:setAnalysis() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:setButtons(boolean[]) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:setButtonFunction(String) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:keyPressed(int,char) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:keyReleased(int,char) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:restartLevel() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:newLevel(| int,int,String) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:mouseReleased(int,int,boolean) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:mouseMoved(int,int) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:mouseDragged(int,int,boolean) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:getIMenuBackground() "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:think(long) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:thinkLevelGame(int) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:render(Graphics2D) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:renderLevelWidthStatistics(Graphics2D) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:renderFPS(Graphics2D) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:renderPause(Graphics2D) "/>
                <element name=" Class: apoCommando.game.ApoMarioPanel Method:renderAchievements(Graphics2D) "/>
                <element name=" Class: apoCommando.level.ApoMarioAchievements Method:ApoMarioAchievements(ApoMarioPanel) "/>
                <element name=" Class: apoCommando.level.ApoMarioAchievements Method:getAchievements() "/>
                <element name=" Class: apoCommando.level.ApoMarioAchievements Method:addJump() "/>
                <element name=" Class: apoCommando.level.ApoMarioAchievements Method:addDuck() "/>
                <element name=" Class: apoCommando.level.ApoMarioAchievements Method:addTime(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioAchievements Method:addHiddenWord(String) "/>
                <element name=" Class: apoCommando.level.ApoMarioAchievements Method:addAchievement(String) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:ApoMarioLevel(ApoMarioGameComponent) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:init() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:isBDark() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:setBDark(boolean) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getDarkTime() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:setDarkTime(float) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getMaxTime() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:setMaxTime(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getNextLevelString() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:setNextLevelString(String) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getWidth() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getHeight() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:isBStop() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:setBStop(boolean) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getLevelInt() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getComponent() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getGoodies() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getEnemies() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:setLevelEntities(ApoMarioEntity[][]) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeLevel(long,boolean,int,int,String) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getDifficulty() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:setWidth(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:setDifficulty(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getStartTime() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getTime() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeFinish(int,int| int,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeBoxQuestionMark(int,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeBoxCoin(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getMaxCoins() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makePlayer(float,float) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeGroundWall(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeGroundCorrect() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeWall(BufferedImage,boolean,boolean,boolean,boolean,int,int,int| boolean,boolean,int,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeKoopa(boolean,int,int,boolean,boolean,boolean) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeGumba(int,int,boolean,boolean,boolean) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeImmortal(int,int,boolean,boolean,boolean) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeCanon(int,int,int,boolean,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:makeFlower(int,int,int,boolean,boolean,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:addParticle(ApoMarioParticle) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:levelRestart() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:restart() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:newLevel(String| int,int,String) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:newSameLevel() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getCannons() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getFinish() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getLevelEntities() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getPlayer() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:getPassedTime() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:setAnalysis(boolean) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:isBAnalysis() "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:think(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:thinkTime(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:thinkPlayer(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:thinkFinish(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:thinkParticle(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:thinkEnemies(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:thinkGoodies(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:thinkLevelEntities(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:renderBackgroundImage(Graphics2D,BufferedImage,float,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:renderParticle(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:renderFinish(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:renderPlayer(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:renderEnemies(Graphics2D,int,int,boolean) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:renderGoodies(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:renderCoins(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioLevel Method:renderTiles(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:ApoMarioMyLevels(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeFirstLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeSecondLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeThirdLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeFourthLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeFifthLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeSixLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeSevenLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeWall(int[][],int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeRandomWall(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeEightLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeNineLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeMandyLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeAntjeLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeClemensLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeJessikaLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeTutorialLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeTenLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeElevenLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeTwelveLevel(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeGround(int,int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioMyLevels Method:makeHole(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:ApoMarioRandomLevel(ApoMarioLevel) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:getLastRandom() "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:setLastRandom(long) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:getWidth() "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:setWidth(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:getDifficulty() "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:setDifficulty(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeRandomLevel(long) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeBFull() "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeGround(int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeIncreaseWall(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:isEmpty(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeHole(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeHoleOnly(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:isFull(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeCannon(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeFlower(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:isReserved(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:isOneHeight(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeWalls(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:canMakeWalls(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeDestructableWall(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeQuestionmark(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeCoin(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioRandomLevel Method:makeEnemy(int,int) "/>
                <element name=" Class: apoCommando.level.ApoMarioStats Method:ApoMarioStats(String) "/>
                <element name=" Class: apoCommando.level.ApoMarioStats Method:getCount() "/>
                <element name=" Class: apoCommando.level.ApoMarioStats Method:addCount() "/>
                <element name=" Class: apoCommando.level.ApoMarioStats Method:getCurString() "/>
                <element name=" Class: apoCommando.level.ApoMarioStats Method:toString() "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:ApoMarioAnalysis(ApoMarioPanel) "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseDragged(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:mouseMoved(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:mousePressed(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:think(int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:checkCurString() "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:getBackgroundImageWithRect() "/>
                <element name=" Class: apoCommando.panels.ApoMarioAnalysis Method:render(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:ApoMarioGame(ApoMarioPanel) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:init(boolean) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:getTutorial() "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:checkCurString() "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:setStop() "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:mouseDragged(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:mouseMoved(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:mousePressed(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:think(int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:changeCamera() "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:thinkLevel(int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:playerHumanControl() "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:getBackgroundImageWithRect() "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:render(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:renderStatistics(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioGame Method:renderCurcor(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:ApoMarioMenu(ApoMarioPanel) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:checkCurString() "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:exit() "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:startSimulation() "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:mouseDragged(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:mouseMoved(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:mousePressed(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:think(int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:getBackgroundImageWithRect() "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:render(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioMenu Method:renderPlayerStats(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:ApoMarioModel(ApoMarioPanel) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:init() "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:getValue() "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:setValue(int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:getLastCommands() "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:addCommand(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:getBackgroundImageWithRect() "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:getStatsImage() "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:getGame() "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:mouseMoved(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:mouseDragged(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:mousePressed(int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:checkString() "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:checkAchievements(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:checkLevelCode(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:checkLevelLoad(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:checkCurString() "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:checkDifficulty(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:checkExtra(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:think(int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:render(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:renderExtraString(Graphics2D,int,int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:renderStats(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:renderAchievements(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioModel Method:renderLevelcodes(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioTutorial Method:ApoMarioTutorial(ApoMarioGame) "/>
                <element name=" Class: apoCommando.panels.ApoMarioTutorial Method:isBTutorial() "/>
                <element name=" Class: apoCommando.panels.ApoMarioTutorial Method:setBTutorial(boolean) "/>
                <element name=" Class: apoCommando.panels.ApoMarioTutorial Method:nextCheck() "/>
                <element name=" Class: apoCommando.panels.ApoMarioTutorial Method:checkCurString(String) "/>
                <element name=" Class: apoCommando.panels.ApoMarioTutorial Method:think(int) "/>
                <element name=" Class: apoCommando.panels.ApoMarioTutorial Method:renderTutorial(Graphics2D) "/>
                <element name=" Class: apoCommando.panels.ApoMarioTutorial Method:drawSpeech(Graphics2D,String,int,int,int) "/>
                <element name=" Class: org.apogames.ApoCanvas Method:paint(Graphics) "/>
                <element name=" Class: org.apogames.ApoCanvas Method:update(Graphics) "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:ApoDisplayConfiguration(int,int,int,boolean,boolean) "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:isApplet() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:isWidescreen() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:getWidth() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:getHeight() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:getDepth() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:isWindowed() "/>
                <element name=" Class: org.apogames.ApoIO Method:ApoIO() "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:ApoLibraryGame(ApoSubGame) "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:run() "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:getScreen() "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:selectGame(int) "/>
                <element name=" Class: org.apogames.ApoScreen Method:ApoScreen(String,ApoDisplayConfiguration) "/>
                <element name=" Class: org.apogames.ApoScreen Method:init() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getComponent() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getFps() "/>
                <element name=" Class: org.apogames.ApoScreen Method:setFps(int) "/>
                <element name=" Class: org.apogames.ApoScreen Method:getSubGame() "/>
                <element name=" Class: org.apogames.ApoScreen Method:setSubGame(ApoSubGame) "/>
                <element name=" Class: org.apogames.ApoScreen Method:getParent() "/>
                <element name=" Class: org.apogames.ApoScreen Method:setParent(Component) "/>
                <element name=" Class: org.apogames.ApoScreen Method:initApplet() "/>
                <element name=" Class: org.apogames.ApoScreen Method:initWindowed() "/>
                <element name=" Class: org.apogames.ApoScreen Method:repaint() "/>
                <element name=" Class: org.apogames.ApoScreen Method:addWindowListener(JFrame) "/>
                <element name=" Class: org.apogames.ApoScreen Method:windowClosing(WindowEvent) "/>
                <element name=" Class: org.apogames.ApoScreen Method:quit() "/>
                <element name=" Class: org.apogames.ApoScreen Method:initFullscreen() "/>
                <element name=" Class: org.apogames.ApoScreen Method:update() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getBufferStrategy() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getGraphics2D() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getDisplayConfiguration() "/>
                <element name=" Class: org.apogames.ApoScreen Method:addKeyboard(ApoKeyboard) "/>
                <element name=" Class: org.apogames.ApoScreen Method:addMouse(ApoMouse) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:ApoSubGame(ApoScreen) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:init() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getScreen() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:run() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getKeyboard() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:shouldThink() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:setShouldThink(boolean) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:shouldRepaint() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:setShouldRepaint(boolean) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:think(long) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:addFrame() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getRenderTime() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getThinkTime() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:end(int) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getNextID() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:load() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:update(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:makeImageArray() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setIBackground(BufferedImage) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getImages() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getDirection() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setDirection(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:isBLoop() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setBLoop(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:isBAnimation() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setBAnimation(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getWait() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBOpaque() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBOpaque(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getVelocityY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setVelocityY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getVelocityX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setVelocityX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:ApoNewTextfield(float,float,float,float,Font) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getMaxLength() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setMaxLength(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:isBEnabled() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setBEnabled(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getFont() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setFont(Font) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:mouseDragged(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:mousePressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:mouseReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:nextSelectedPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setSelectedPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getThisPosition(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getCurString() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getSelectedString() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:deleteSelectedString() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:removeCurStringAndSetCurString(String) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setCurString(String) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getPosition() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextBackspace() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextDelete() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:addCharacter(int,char) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:showLine() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:ApoTextField(float,float,float,float) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getFont() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setFont(Font) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getMaxLength() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setMaxLength(int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getCurString() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setCurString(String) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getPosition() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:deleteTextBackspace() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:deleteTextDelete() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:addCharacter(int,char) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:showLine() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getMd5Digest(String) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:setClipboardContents(String) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getClipboardContents() "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rectangleContains(float,float,float,float,float,float) "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:init() "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                <element name=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                <element name=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                <element name=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                <element name=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:drawString(Graphics2D,String,int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color| int,int,String,Color,Color,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getImageCopy(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:ApoKeyboard() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:isPressed(int) "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:getReleased() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:getPressed() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:keyPressed(KeyEvent) "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:keyReleased(KeyEvent) "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:keyTyped(KeyEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:ApoMouse() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:getX() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:getY() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:isDragged() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:getReleased() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:hasClicked(int) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mousePressed(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mouseReleased(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mouseMoved(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mouseDragged(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:updateCoord(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:isMoved() "/>
                <element name=" Class: org.apogames.sound.ApoMidi Method:addSong(String) "/>
                <element name=" Class: org.apogames.sound.ApoMidi Method:startMusic(int) "/>
                <element name=" Class: org.apogames.sound.ApoMidi Method:stopMusic() "/>
                <element name=" Class: org.apogames.sound.ApoMidi Method:setVolume(int) "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:ApoMidiPlayer() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:play(Sequence,boolean) "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:stop() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:close() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequencer() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:setPaused(boolean) "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:isPaused() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:setVolume(int) "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:playSound(String) "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:ApoSoundThread(Runnable) "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:run() "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:pause(boolean| ) "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:stop() "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:isRunning() "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:isPaused() "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:AudioPlayer(String,boolean) "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:start() "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:isBStop() "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:setBStop(boolean) "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:isBLoop() "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:setBLoop(boolean) "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:run() "/>
            </content>
        </node>
        <node name="Block 05" nbartefacts="2" nbelems="14">
            <artefacts>
                <artefact name="ApoIcarus" percentage="1.338432122370937"/>
                <artefact name="ApoMarc" percentage="0.7314524555903866"/>
            </artefacts>
            <content>
                <element name=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float| float,float,float,float| ApoEntity) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point| float,float,float,float) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color| int,int,String,Color,Color,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String| BufferedImage,int,int,int,int,String,int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int| Graphics2D| Graphics) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String| BufferedImage,int,int,int,int,String,int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float| float,float,float,float| ApoEntity) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float| ApoEntity) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int| Graphics2D| Graphics) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point| float,float,float,float) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Color,Color| int,int,String,Color,Color,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:writeScaledImage(| String| BufferedImage,String) "/>
            </content>
        </node>
        <node name="Block 06" nbartefacts="2" nbelems="3">
            <artefacts>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando" percentage="0.34762456546929316"/>
                <artefact name="ApoMarc" percentage="0.1567398119122257"/>
            </artefacts>
            <content>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequence(String| InputStream) "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:start(| boolean) "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequence(String| InputStream) "/>
            </content>
        </node>
        <node name="Block 04" nbartefacts="2" nbelems="2">
            <artefacts>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot" percentage="0.38910505836575876"/>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando" percentage="0.2317497103128621"/>
            </artefacts>
            <content>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String| BufferedImage,int,int,int,int,String,int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int| Graphics2D| Graphics) "/>
            </content>
        </node>
        <node name="Block 03" nbartefacts="3" nbelems="2">
            <artefacts>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot" percentage="0.38910505836575876"/>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando" percentage="0.2317497103128621"/>
                <artefact name="ApoMarc" percentage="0.10449320794148381"/>
            </artefacts>
            <content>
                <element name=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:playSound(String| String,boolean) "/>
            </content>
        </node>
        <node name="Block 02" nbartefacts="4" nbelems="5">
            <artefacts>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot" percentage="0.9727626459143969"/>
                <artefact name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando" percentage="0.5793742757821553"/>
                <artefact name="ApoIcarus" percentage="0.47801147227533464"/>
                <artefact name="ApoMarc" percentage="0.2612330198537095"/>
            </artefacts>
            <content>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
            </content>
        </node>
    </BlockReuseAnalyse>
    <BlockUniqueAnalyse>
        <node name="Block 10" nbelems="540">
            <artefact name="ApoMarc" percentage="28.213166144200624"/>
            <content>
                <element name=" Class: apoMarc.ApoLibraryGame Method:ApoLibraryGame(String,ApoDisplayConfiguration) "/>
                <element name=" Class: apoMarc.ApoLibraryGame Method:run() "/>
                <element name=" Class: apoMarc.ApoLibraryGame Method:getScreen() "/>
                <element name=" Class: apoMarc.ApoLibraryGame Method:getDisplayConfiguration() "/>
                <element name=" Class: apoMarc.ApoLibraryGame Method:selectGame(int) "/>
                <element name=" Class: apoMarc.ApoMarcApplet Method:ApoMarcApplet() "/>
                <element name=" Class: apoMarc.ApoMarcApplet Method:stop() "/>
                <element name=" Class: apoMarc.ApoMarcApplet Method:destroy() "/>
                <element name=" Class: apoMarc.ApoMarcApplet Method:init() "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:ApoMarcGameComponent(ApoScreen) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:load() "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:isShowFPS() "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:setShowFPS(boolean) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:getButtons() "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:setButtons(ApoButton[]) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:getImages() "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:getFPS() "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:renderButtons(Graphics2D) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:update(long) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:think(long) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:keyPressed(int,char) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:keyReleased(int) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:mouseDragged(int,int) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:mouseMoved(int,int) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:mouseReleased(int,int,boolean) "/>
                <element name=" Class: apoMarc.ApoMarcGameComponent Method:setButtonFunction(String) "/>
                <element name=" Class: apoMarc.ApoMarcImages Method:ApoMarcImages() "/>
                <element name=" Class: apoMarc.ApoMarcImages Method:getImage(String,boolean) "/>
                <element name=" Class: apoMarc.ApoMarcImages Method:getLogo(BufferedImage) "/>
                <element name=" Class: apoMarc.ApoMarcImages Method:getImageMouseOver(BufferedImage| BufferedImage,int| BufferedImage,int,Color,int) "/>
                <element name=" Class: apoMarc.ApoMarcImages Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font,int) "/>
                <element name=" Class: apoMarc.ApoMarcImages Method:getButtonWithImage(int,int,BufferedImage,String,Color,Color,Color| int,int,BufferedImage,String,Color,Color,Color,Font) "/>
                <element name=" Class: apoMarc.ApoMarcMain Method:main(String[]) "/>
                <element name=" Class: apoMarc.ApoMarcMain Method:ApoMarcMain() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEffects Method:ApoMarcEffects(float,float,Color) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEffects Method:think(int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEffects Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:ApoMarcEntity(float,float,float,float,Color,boolean) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:init() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:getMaxTime() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:setMaxTime(int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:getMyOrgColor() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:makeEffects(int,int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:getMinWidth() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:setMinWidth(int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:getMaxWidth() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:setMaxWidth(int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:isBHitEffects() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:getMyColor() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:setMyColor(Color) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:getCurWidth() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:isBRepeat() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:setBRepeat(boolean) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:think(long,ApoMarcGame) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:littleMinSize() "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:thinkEntity(int,ApoMarcGame) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcEntity Method:renderEntity(Graphics2D) "/>
                <element name=" Class: apoMarc.entity.ApoMarcHelpButton Method:ApoMarcHelpButton(float,float,float,float,String| float,float,float,float,String,String) "/>
                <element name=" Class: apoMarc.entity.ApoMarcHelpButton Method:init() "/>
                <element name=" Class: apoMarc.entity.ApoMarcHelpButton Method:isBActive() "/>
                <element name=" Class: apoMarc.entity.ApoMarcHelpButton Method:setBActive(boolean) "/>
                <element name=" Class: apoMarc.entity.ApoMarcHelpButton Method:mouseReleased(int,int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcHelpButton Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPaddle Method:ApoMarcPaddle(float,float,float,Color,Rectangle2D.Float) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPaddle Method:init() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPaddle Method:isBFirstTouch() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPaddle Method:setBFirstTouch(boolean) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPaddle Method:thinkEntity(int,ApoMarcGame) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPaddle Method:littleMinSize() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPaddle Method:setNewPaddle(boolean) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPaddleAI Method:think(ApoMarcGame,ApoMarcPlayer,int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:ApoMarcPlayer(float,float,float,Color,boolean,Rectangle2D.Float) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:init() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:getDifficulty() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:setDifficulty(int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:getAi() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:setAi(ApoMarcPaddleAI) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:getSpeed() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:setSpeed(float) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:getLos() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:setLos(float) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:isBSelect() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:setBSelect(boolean) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:setNewPosition(float,float,ApoMarcGame) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:setNewSpeedAndPosition(int,ApoMarcGame,ApoMarcPlayer) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:checkPlayerIntersects(ApoMarcGame,float) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:setPaddleBackPlayer(ApoMarcPlayer,ApoMarcPaddle) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:setPaddleBackWall(ApoMarcWall,ApoMarcPaddle) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:intersects(float,float,float) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:getPoints() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:addOnePoint() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:thinkEntity(int,ApoMarcGame) "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:littleMinSize() "/>
                <element name=" Class: apoMarc.entity.ApoMarcPlayer Method:renderEntity(Graphics2D) "/>
                <element name=" Class: apoMarc.entity.ApoMarcWall Method:ApoMarcWall(float,float,float,float,int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcWall Method:init() "/>
                <element name=" Class: apoMarc.entity.ApoMarcWall Method:makeEffects(int,int) "/>
                <element name=" Class: apoMarc.entity.ApoMarcWall Method:littleMinSize() "/>
                <element name=" Class: apoMarc.entity.ApoMarcWall Method:thinkEntity(int,ApoMarcGame) "/>
                <element name=" Class: apoMarc.entity.ApoMarcWall Method:getColorOrder() "/>
                <element name=" Class: apoMarc.entity.ApoMarcWall Method:nextColor() "/>
                <element name=" Class: apoMarc.entity.ApoMarcWall Method:renderEntity(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcAchievements Method:ApoMarcAchievements(ApoMarcPanel) "/>
                <element name=" Class: apoMarc.game.ApoMarcAchievements Method:init() "/>
                <element name=" Class: apoMarc.game.ApoMarcAchievements Method:addAchievements(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcAchievements Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoMarc.game.ApoMarcAchievements Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcAchievements Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcAchievements Method:think(long) "/>
                <element name=" Class: apoMarc.game.ApoMarcAchievements Method:render(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcAchievements Method:drawApoAchievement(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcButtons Method:ApoMarcButtons(ApoMarcPanel) "/>
                <element name=" Class: apoMarc.game.ApoMarcButtons Method:init() "/>
                <element name=" Class: apoMarc.game.ApoMarcCredits Method:ApoMarcCredits(ApoMarcPanel) "/>
                <element name=" Class: apoMarc.game.ApoMarcCredits Method:init() "/>
                <element name=" Class: apoMarc.game.ApoMarcCredits Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoMarc.game.ApoMarcCredits Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcCredits Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcCredits Method:think(long) "/>
                <element name=" Class: apoMarc.game.ApoMarcCredits Method:render(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcDifficulty Method:ApoMarcDifficulty(ApoMarcPanel) "/>
                <element name=" Class: apoMarc.game.ApoMarcDifficulty Method:init() "/>
                <element name=" Class: apoMarc.game.ApoMarcDifficulty Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoMarc.game.ApoMarcDifficulty Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcDifficulty Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcDifficulty Method:think(long) "/>
                <element name=" Class: apoMarc.game.ApoMarcDifficulty Method:render(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:ApoMarcGame(ApoMarcPanel) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:init(int) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:restart() "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:setBPause(boolean) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:setBOver(boolean) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:isBPause() "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:getPaddle() "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:getWalls() "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:getPlayers() "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:setPause(boolean) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:mouseMoved(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:mouseDragged(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:think(long) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:render(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:drawStatistics(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcGame Method:drawOver(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcMenu Method:ApoMarcMenu(ApoMarcPanel) "/>
                <element name=" Class: apoMarc.game.ApoMarcMenu Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoMarc.game.ApoMarcMenu Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcMenu Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcMenu Method:think(long) "/>
                <element name=" Class: apoMarc.game.ApoMarcMenu Method:render(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:ApoMarcModel(ApoMarcPanel) "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:getGame() "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:init() "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:mouseMoved(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:mouseDragged(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:think(long) "/>
                <element name=" Class: apoMarc.game.ApoMarcModel Method:render(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcOptions Method:ApoMarcOptions(ApoMarcPanel) "/>
                <element name=" Class: apoMarc.game.ApoMarcOptions Method:init() "/>
                <element name=" Class: apoMarc.game.ApoMarcOptions Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoMarc.game.ApoMarcOptions Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcOptions Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcOptions Method:think(long) "/>
                <element name=" Class: apoMarc.game.ApoMarcOptions Method:render(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:ApoMarcPanel(ApoScreen) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:load() "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:setMenu() "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:setGame(int) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:setDifficulty() "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:setAchievements() "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:setCredits() "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:setOptions() "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:setButtonVisible(boolean[]) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:keyReleased(int) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:setButtonFunction(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:mouseReleased(int,int,boolean) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:mouseMoved(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:mouseDragged(int,int) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:addAchievement(String) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:think(long) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:render(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:renderBackground(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:renderAchievements(Graphics2D) "/>
                <element name=" Class: apoMarc.game.ApoMarcPanel Method:renderFPS(Graphics2D) "/>
                <element name=" Class: org.apogames.ApoCanvas Method:paint(Graphics) "/>
                <element name=" Class: org.apogames.ApoCanvas Method:update(Graphics) "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:ApoDisplayConfiguration(int,int,int,boolean,boolean) "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:isApplet() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:isWidescreen() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:getWidth() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:getHeight() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:getDepth() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:isWindowed() "/>
                <element name=" Class: org.apogames.ApoIO Method:ApoIO() "/>
                <element name=" Class: org.apogames.ApoIO Method:writeLevel(String) "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:ApoLibraryGame(ApoSubGame) "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:run() "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:getScreen() "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:selectGame(int) "/>
                <element name=" Class: org.apogames.ApoScreen Method:ApoScreen(String,ApoDisplayConfiguration) "/>
                <element name=" Class: org.apogames.ApoScreen Method:init() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getComponent() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getFps() "/>
                <element name=" Class: org.apogames.ApoScreen Method:setFps(int) "/>
                <element name=" Class: org.apogames.ApoScreen Method:getSubGame() "/>
                <element name=" Class: org.apogames.ApoScreen Method:setSubGame(ApoSubGame) "/>
                <element name=" Class: org.apogames.ApoScreen Method:getParent() "/>
                <element name=" Class: org.apogames.ApoScreen Method:setParent(Component) "/>
                <element name=" Class: org.apogames.ApoScreen Method:initApplet() "/>
                <element name=" Class: org.apogames.ApoScreen Method:initWindowed() "/>
                <element name=" Class: org.apogames.ApoScreen Method:repaint() "/>
                <element name=" Class: org.apogames.ApoScreen Method:addWindowListener(JFrame) "/>
                <element name=" Class: org.apogames.ApoScreen Method:windowClosing(WindowEvent) "/>
                <element name=" Class: org.apogames.ApoScreen Method:quit() "/>
                <element name=" Class: org.apogames.ApoScreen Method:initFullscreen() "/>
                <element name=" Class: org.apogames.ApoScreen Method:update() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getBufferStrategy() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getGraphics2D() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getDisplayConfiguration() "/>
                <element name=" Class: org.apogames.ApoScreen Method:addKeyboard(ApoKeyboard) "/>
                <element name=" Class: org.apogames.ApoScreen Method:addMouse(ApoMouse) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:ApoSubGame(ApoScreen) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:init() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:stopGame() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getScreen() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:run() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getKeyboard() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:shouldThink() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:setShouldThink(boolean) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:shouldRepaint() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:setShouldRepaint(boolean) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:think(long) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:render() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:addFrame() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getRenderTime() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getThinkTime() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:end(int) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getNextID() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:load() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:update(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:isBLoop() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setBLoop(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:isBAnimation() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setBAnimation(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBVisible(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:notOver() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getWait() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:ApoButtonText(BufferedImage,int,int,int,int,String,String) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBOpaque() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBOpaque(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getVecY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setVecY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getVecX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setVecX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:intersects(float,float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:contains(float,float,float,float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:ApoNewTextfield(float,float,float,float,Font) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getMaxLength() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setMaxLength(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:isBEnabled() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setBEnabled(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getFont() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setFont(Font) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:mouseDragged(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:mousePressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:mouseReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:nextSelectedPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setSelectedPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getThisPosition(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getCurString() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getSelectedString() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:deleteSelectedString() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:removeCurStringAndSetCurString(String) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setCurString(String) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getPosition() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextBackspace() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextDelete() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:addCharacter(int,char) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:showLine() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:ApoTextField(float,float,float,float) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getFont() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setFont(Font) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getMaxLength() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setMaxLength(int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getCurString() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setCurString(String) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getPosition() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:deleteTextBackspace() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:deleteTextDelete() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:addCharacter(int,char) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:showLine() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String| String[]| ) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getAngleBetween2Points(Point,Point) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getMd5Digest(String) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:setClipboardContents(String) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getClipboardContents() "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rectangleIntersects(float,float,float,float,float,float,float,float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rectangleContains(float,float,float,float,float,float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:drawSpeech(Graphics2D,String,int,int,int) "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:getInstance() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:ApoHighscore() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:getNames() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:getLevels() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:getPoints() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:clear() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:save(int,int,String) "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:load() "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:init() "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                <element name=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                <element name=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                <element name=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                <element name=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:drawString(Graphics2D,String,int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getButtonImage(int,int,String,int) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getImageCopy(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:ApoImageScale(String| String,int) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:ApoKeyboard() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:isPressed(int) "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:getReleased() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:getPressed() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:keyPressed(KeyEvent) "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:keyReleased(KeyEvent) "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:keyTyped(KeyEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:ApoMouse() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:getX() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:getY() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:isDragged() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:getReleased() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:hasClicked(int) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mousePressed(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mouseReleased(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mouseMoved(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mouseDragged(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:updateCoord(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:isMoved() "/>
                <element name=" Class: org.apogames.sound.ApoMidi Method:addSong(String) "/>
                <element name=" Class: org.apogames.sound.ApoMidi Method:startMusic(int) "/>
                <element name=" Class: org.apogames.sound.ApoMidi Method:stopMusic() "/>
                <element name=" Class: org.apogames.sound.ApoMidi Method:setVolume(int) "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:ApoMidiPlayer() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:play(Sequence,boolean) "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:stop() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:close() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:getSequencer() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:setPaused(boolean) "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:isPaused() "/>
                <element name=" Class: org.apogames.sound.ApoMidiPlayer Method:setVolume(int) "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:getCurrentTime() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:isLoopPlay() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:setLoopPlay(Boolean) "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:stop() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:play() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:getVolume() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:setVolumen(int) "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:run() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:setSong(String) "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:getSong() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:getSongTime() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:reset(boolean) "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:isPlaying() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:setPause(boolean) "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:isPause() "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:setMute(boolean) "/>
                <element name=" Class: org.apogames.sound.ApoMP3Sound Method:isMute() "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:ApoSounds() "/>
                <element name=" Class: org.apogames.sound.ApoSounds Method:loadSound(String,String) "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:ApoSoundThread(Runnable) "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:start() "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:run() "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:pause(boolean| ) "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:stop() "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:isRunning() "/>
                <element name=" Class: org.apogames.sound.ApoSoundThread Method:isPaused() "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:AudioPlayer(String,boolean) "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:start() "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:isBStop() "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:setBStop(boolean) "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:isBLoop() "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:setBLoop(boolean) "/>
                <element name=" Class: org.apogames.sound.AudioPlayer Method:run() "/>
                <element name=" Class: org.apogames.subgame.ApoGamePanel Method:ApoGamePanel(ApoScreen) "/>
                <element name=" Class: org.apogames.subgame.ApoGamePanel Method:update(long) "/>
                <element name=" Class: org.apogames.subgame.ApoGamePanel Method:think(long) "/>
                <element name=" Class: org.apogames.subgame.ApoGamePanel Method:keyPressed(int,char) "/>
                <element name=" Class: org.apogames.subgame.ApoGamePanel Method:keyReleased(int) "/>
                <element name=" Class: org.apogames.subgame.ApoGamePanel Method:mouseDragged(int,int) "/>
                <element name=" Class: org.apogames.subgame.ApoGamePanel Method:mouseMoved(int,int) "/>
                <element name=" Class: org.apogames.subgame.ApoGamePanel Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: org.apogames.subgame.ApoGamePanel Method:mouseReleased(int,int,boolean) "/>
            </content>
        </node>
        <node name="Block 09" nbelems="512">
            <artefact name="ApoIcarus" percentage="48.94837476099426"/>
            <content>
                <element name=" Class: apoJump.ApoJumpApplet Method:ApoJumpApplet() "/>
                <element name=" Class: apoJump.ApoJumpApplet Method:stop() "/>
                <element name=" Class: apoJump.ApoJumpApplet Method:destroy() "/>
                <element name=" Class: apoJump.ApoJumpApplet Method:init() "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:ApoJumpComponent(ApoScreen) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:load() "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:isBWin() "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:setBWin(boolean) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:isShowFPS() "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:setShowFPS(boolean) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:getButtons() "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:setButtons(ApoButton[]) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:getImages() "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:getFPS() "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:renderButtons(Graphics2D) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:update(long) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:think(long) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:keyPressed(int,char) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:keyReleased(int,char) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:mouseDragged(int,int,boolean) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:mouseMoved(int,int) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:mouseReleased(int,int,boolean) "/>
                <element name=" Class: apoJump.ApoJumpComponent Method:setButtonFunction(String) "/>
                <element name=" Class: apoJump.ApoJumpImageContainer Method:load() "/>
                <element name=" Class: apoJump.ApoJumpImages Method:ApoJumpImages() "/>
                <element name=" Class: apoJump.ApoJumpImages Method:getImage(String,boolean) "/>
                <element name=" Class: apoJump.ApoJumpImages Method:getLogo(BufferedImage) "/>
                <element name=" Class: apoJump.ApoJumpImages Method:getImageMouseOver(BufferedImage| BufferedImage,int| BufferedImage,int,Color,int) "/>
                <element name=" Class: apoJump.ApoJumpImages Method:getButtonImage(int,int,String,int| int,int,String,Color,Color,Color,int| int,int,String,Color,Color,Color,Font,int| int,int,String,Color,Color,Color,Color,Color,Font,int) "/>
                <element name=" Class: apoJump.ApoJumpImages Method:getButtonWithImage(int,int,BufferedImage,String,Color,Color,Color| int,int,BufferedImage,String,Color,Color,Color,Font) "/>
                <element name=" Class: apoJump.ApoJumpMain Method:main(String[]) "/>
                <element name=" Class: apoJump.ApoJumpMain Method:ApoJumpMain() "/>
                <element name=" Class: apoJump.entity.ApoJumpArrow Method:ApoJumpArrow(float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpArrow Method:update(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpArrow Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpEnemy Method:ApoJumpEnemy(BufferedImage,float,float,float,float,int,long,int,boolean,float,float,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpEnemy Method:init() "/>
                <element name=" Class: apoJump.entity.ApoJumpEnemy Method:getMaxY() "/>
                <element name=" Class: apoJump.entity.ApoJumpEnemy Method:setMaxY(int) "/>
                <element name=" Class: apoJump.entity.ApoJumpEnemy Method:update(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpEnemy Method:getPoints() "/>
                <element name=" Class: apoJump.entity.ApoJumpEnemy Method:playerJumpOnPlatform(ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpEnemy Method:playerIntersectsWithPlatform(ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpEnemy Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpEntity Method:ApoJumpEntity(BufferedImage,float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpEntity Method:think(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpEntity Method:update(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureArrow Method:ApoJumpFeatureArrow(BufferedImage,float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureArrow Method:update(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureArrow Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureHelicopter Method:ApoJumpFeatureHelicopter(BufferedImage,float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureHelicopter Method:update(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureHelicopter Method:playerJump(ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureHelicopter Method:renderContent(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureMissle Method:ApoJumpFeatureMissle(BufferedImage,float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureMissle Method:update(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureMissle Method:playerJump(ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureMissle Method:renderContent(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureSpring Method:ApoJumpFeatureSpring(BufferedImage,float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureSpring Method:update(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureSpring Method:playerJump(ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureSpring Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpFeatureSpring Method:renderContent(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformIce Method:ApoJumpPlatformIce(BufferedImage,float,float,float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformIce Method:playerJumpOnPlatform() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformIce Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformInvisible Method:ApoJumpPlatformInvisible(BufferedImage,float,float,float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformInvisible Method:init() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformInvisible Method:update(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformInvisible Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformNormal Method:ApoJumpPlatformNormal(BufferedImage,float,float,float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformNormal Method:init() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformNormal Method:getMaxVecY() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformNormal Method:setMaxVecY(int) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformNormal Method:update(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformNormal Method:playerIntersectsWithPlatform(ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformNormal Method:playerJumpOnPlatform() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlatformNormal Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:ApoJumpPlayer(BufferedImage,float,float,float,float) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:init() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:getAutomaticArrow() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:setAutomaticArrow(int) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:isBDie() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:setVecX(float) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:setHelicopter() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:setMissle() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:think(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:thinkAutomaticArrow(int,ApoJumpLevel) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:getTimeBonus() "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:thinkPosition(int) "/>
                <element name=" Class: apoJump.entity.ApoJumpPlayer Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpButton Method:ApoJumpButton(ApoJumpPanel) "/>
                <element name=" Class: apoJump.game.ApoJumpButton Method:init() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:ApoJumpPanel(ApoScreen) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:init() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:getLevel() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:getAchievements() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:getHighscore() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:makeBackground() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:setMenu() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:setGame() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:setOptions() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:setHelp() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:setAchievements() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:setHighscore() "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:setBWin(boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:setButtons(boolean[]) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:keyReleased(int,char) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:setButtonFunction(String) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:mouseMoved(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:mouseDragged(int,int,boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:mouseReleased(int,int,boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:think(long) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:render(Graphics2D) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:renderBackground(Graphics2D) "/>
                <element name=" Class: apoJump.game.ApoJumpPanel Method:renderFPS(Graphics2D) "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:ApoJumpState(ApoJumpPanel) "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:init() "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:getGame() "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:mouseMoved(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:mouseDragged(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:think(int) "/>
                <element name=" Class: apoJump.game.ApoJumpState Method:render(Graphics2D) "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:ApoJumpStateAchievements(ApoJumpPanel) "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:init() "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:loadAchievements() "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:saveAchievements() "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:makeBackground() "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:addAchievements(String,boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:think(int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateAchievements Method:render(Graphics2D) "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:ApoJumpStateGame(ApoJumpPanel) "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:init() "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:setWin() "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:mouseDragged(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:mousePressed(int,int,boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:mouseMoved(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:restart() "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:uploadScore() "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:upload() "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:think(int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateGame Method:render(Graphics2D) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHelp Method:ApoJumpStateHelp(ApoJumpPanel) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHelp Method:init() "/>
                <element name=" Class: apoJump.game.ApoJumpStateHelp Method:makeBackground() "/>
                <element name=" Class: apoJump.game.ApoJumpStateHelp Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHelp Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHelp Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHelp Method:think(int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHelp Method:render(Graphics2D) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHelp Method:drawCloud(Graphics2D,BufferedImage,int,int,String) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:ApoJumpStateHighscore(ApoJumpPanel) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:init() "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:makeBackground() "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:loadHighscore(boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:run() "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:load(boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:getPosition(int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:getHelp() "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:sortList(boolean) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:nextHighscore(int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:think(int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscore Method:render(Graphics2D) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscoreHelp Method:ApoJumpStateHighscoreHelp(int,int,String) "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscoreHelp Method:getPoints() "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscoreHelp Method:getTime() "/>
                <element name=" Class: apoJump.game.ApoJumpStateHighscoreHelp Method:getName() "/>
                <element name=" Class: apoJump.game.ApoJumpStateMenu Method:ApoJumpStateMenu(ApoJumpPanel) "/>
                <element name=" Class: apoJump.game.ApoJumpStateMenu Method:init() "/>
                <element name=" Class: apoJump.game.ApoJumpStateMenu Method:makeBackground() "/>
                <element name=" Class: apoJump.game.ApoJumpStateMenu Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoJump.game.ApoJumpStateMenu Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoJump.game.ApoJumpStateMenu Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateMenu Method:executeFunction() "/>
                <element name=" Class: apoJump.game.ApoJumpStateMenu Method:think(int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateMenu Method:render(Graphics2D) "/>
                <element name=" Class: apoJump.game.ApoJumpStateOptions Method:ApoJumpStateOptions(ApoJumpPanel) "/>
                <element name=" Class: apoJump.game.ApoJumpStateOptions Method:init() "/>
                <element name=" Class: apoJump.game.ApoJumpStateOptions Method:makeBackground() "/>
                <element name=" Class: apoJump.game.ApoJumpStateOptions Method:keyButtonReleased(int,char) "/>
                <element name=" Class: apoJump.game.ApoJumpStateOptions Method:mouseButtonFunction(String) "/>
                <element name=" Class: apoJump.game.ApoJumpStateOptions Method:mouseButtonReleased(int,int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateOptions Method:think(int) "/>
                <element name=" Class: apoJump.game.ApoJumpStateOptions Method:render(Graphics2D) "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:ApoJumpLevel(ApoJumpPanel) "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:init() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:getTime() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:addJump() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:addEnemyKill() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:addWings() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:getPlayer() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:getPlattforms() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:addPoint(int) "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:getPoints() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:makeArrow(int,int) "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:makePlatforms(float,float) "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:getEnemies() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:getChangeY() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:setWin() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:isFirstPosition() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:think(int) "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:addAchievement(String) "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:makeChangeY() "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:render(Graphics2D,int,int) "/>
                <element name=" Class: apoJump.level.ApoJumpLevel Method:renderStatistics(Graphics2D) "/>
                <element name=" Class: org.apogames.ApoCanvas Method:paint(Graphics) "/>
                <element name=" Class: org.apogames.ApoCanvas Method:update(Graphics) "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:ApoDisplayConfiguration(int,int,int,boolean,boolean) "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:isApplet() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:isWidescreen() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:getWidth() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:getHeight() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:getDepth() "/>
                <element name=" Class: org.apogames.ApoDisplayConfiguration Method:isWindowed() "/>
                <element name=" Class: org.apogames.ApoIO Method:ApoIO() "/>
                <element name=" Class: org.apogames.ApoIO Method:readLevel(String) "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:ApoLibraryGame(ApoSubGame) "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:run() "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:getScreen() "/>
                <element name=" Class: org.apogames.ApoLibraryGame Method:selectGame(int) "/>
                <element name=" Class: org.apogames.ApoScreen Method:ApoScreen(String,ApoDisplayConfiguration) "/>
                <element name=" Class: org.apogames.ApoScreen Method:init() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getComponent() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getFps() "/>
                <element name=" Class: org.apogames.ApoScreen Method:setFps(int) "/>
                <element name=" Class: org.apogames.ApoScreen Method:getSubGame() "/>
                <element name=" Class: org.apogames.ApoScreen Method:setSubGame(ApoSubGame) "/>
                <element name=" Class: org.apogames.ApoScreen Method:getParent() "/>
                <element name=" Class: org.apogames.ApoScreen Method:setParent(Component) "/>
                <element name=" Class: org.apogames.ApoScreen Method:initApplet() "/>
                <element name=" Class: org.apogames.ApoScreen Method:initWindowed() "/>
                <element name=" Class: org.apogames.ApoScreen Method:repaint() "/>
                <element name=" Class: org.apogames.ApoScreen Method:addWindowListener(JFrame) "/>
                <element name=" Class: org.apogames.ApoScreen Method:windowClosing(WindowEvent) "/>
                <element name=" Class: org.apogames.ApoScreen Method:quit() "/>
                <element name=" Class: org.apogames.ApoScreen Method:initFullscreen() "/>
                <element name=" Class: org.apogames.ApoScreen Method:update() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getBufferStrategy() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getGraphics2D() "/>
                <element name=" Class: org.apogames.ApoScreen Method:getDisplayConfiguration() "/>
                <element name=" Class: org.apogames.ApoScreen Method:addKeyboard(ApoKeyboard) "/>
                <element name=" Class: org.apogames.ApoScreen Method:addMouse(ApoMouse) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:ApoSubGame(ApoScreen) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:init() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:stopGame() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getScreen() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:run() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getKeyboard() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:shouldThink() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:setShouldThink(boolean) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:shouldRepaint() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:setShouldRepaint(boolean) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:think(long) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:render() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:addFrame() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getRenderTime() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getThinkTime() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:end(int) "/>
                <element name=" Class: org.apogames.ApoSubGame Method:getNextID() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:load() "/>
                <element name=" Class: org.apogames.ApoSubGame Method:update(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:ApoAnimation(BufferedImage,float,float,int,long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:makeImageArray() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getImages() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getDirection() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setDirection(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getTiles() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setTiles(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getFrame() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setFrame(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getCurTime() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setCurTime(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getTime() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setTime(long) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:isBLoop() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setBLoop(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:isBAnimation() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setBAnimation(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:getIBackground() "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:setIBackground(BufferedImage) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoAnimation Method:render(Graphics2D) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:ApoButton(BufferedImage,int,int,int,int,String) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBWait() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBWait(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getWAIT_DELAY() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setWAIT_DELAY(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBOver() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBOver(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:isBPressed() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setBPressed(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getFunction() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:setFunction(String) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getMove(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getPressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:getWait() "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoButton Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getColorPressed() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setColorPressed(Color) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getColorReleased() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setColorReleased(Color) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:setFontSize(int) "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:getValue() "/>
                <element name=" Class: org.apogames.entity.ApoButtonText Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:ApoDragObject(int,int,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getPressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getIn(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:setDragX(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:setDragY(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getNewX(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getNewY(int) "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getDiffX() "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:getDiffY() "/>
                <element name=" Class: org.apogames.entity.ApoDragObject Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:ApoEntity(BufferedImage,float,float,float,float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getStartX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setStartX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getStartY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setStartY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBOpaque() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBOpaque(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBVisible() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBVisible(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBSelect() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBSelect(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBClose() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBClose(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isBUse() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setBUse(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getVelocityY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setVelocityY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getVelocityX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setVelocityX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getIBackground() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setIBackground(BufferedImage) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getWidth() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setWidth(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getHeight() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setHeight(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getX() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getXMiddle() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setX(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getY() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:setY(float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getRec() "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:checkOpaqueColorCollisions(ApoEntity) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:getSubRec(Rectangle2D.Float,Rectangle2D.Float) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:isOpaque(int) "/>
                <element name=" Class: org.apogames.entity.ApoEntity Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:ApoNewTextfield(float,float,float,float,Font) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getMaxLength() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setMaxLength(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:isBEnabled() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setBEnabled(boolean) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getFont() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setFont(Font) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:mouseDragged(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:mousePressed(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:mouseReleased(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:nextSelectedPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setSelectedPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getThisPosition(int,int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getCurString() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getSelectedString() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:deleteSelectedString() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:removeCurStringAndSetCurString(String) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setCurString(String) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:getPosition() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setSelect() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:setPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextBackspace() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:deleteTextDelete() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:addCharacter(int,char) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:showLine() "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoNewTextfield Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:ApoTextField(float,float,float,float) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:init() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getFont() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setFont(Font) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getMaxLength() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setMaxLength(int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getCurString() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setCurString(String) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:getPosition() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:setPosition(int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:deleteTextBackspace() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:deleteTextDelete() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:addCharacter(int,char) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:showLine() "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:think(int) "/>
                <element name=" Class: org.apogames.entity.ApoTextField Method:render(Graphics2D,int,int) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:ApoClassLoader(String,String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getClassname() "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:setClassname(String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getPath() "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:setPath(String) "/>
                <element name=" Class: org.apogames.help.ApoClassLoader Method:getMyClass() "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:ApoCopy() "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:copyDirectory(String,String) "/>
                <element name=" Class: org.apogames.help.ApoCopy Method:copyFile(String,String) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:ApoFileFilter(String) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getLevelName() "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getExtension(File) "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:getDescription() "/>
                <element name=" Class: org.apogames.help.ApoFileFilter Method:accept(File) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:ApoFileNameFilter(String) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:accept(File,String) "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:getExtension() "/>
                <element name=" Class: org.apogames.help.ApoFileNameFilter Method:setExtension(String) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:ApoFloatPoint(float,float) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:getX() "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:setX(float) "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:getY() "/>
                <element name=" Class: org.apogames.help.ApoFloatPoint Method:setY(float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:ApoHelp() "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rotateImage(BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rotateImageMethodTwo(BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:findTranslation(AffineTransform,BufferedImage,double) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:round(float,int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getCircleCuts(float,float,float,float,float,float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getTimeToDraw(int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getRandomValue(int,int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getMd5Digest(String) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:setClipboardContents(String) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:getClipboardContents() "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:rectangleContains(float,float,float,float,float,float) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:drawSpeech(Graphics2D,String,int,int,int) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:saveData(URL,String,String) "/>
                <element name=" Class: org.apogames.help.ApoHelp Method:loadData(URL,String) "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:getInstance() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:ApoHighscore() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:getNames() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:getTime() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:getPoints() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:clear() "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:save(int,int,String) "/>
                <element name=" Class: org.apogames.help.ApoHighscore Method:load() "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:init() "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:think(int) "/>
                <element name=" Class: org.apogames.help.ApoInterface Method:render(Graphics2D) "/>
                <element name=" Class: org.apogames.help.ApoSplashPainter Method:setImage(Image) "/>
                <element name=" Class: org.apogames.help.ApoSplashPainter Method:paintComponent(Graphics) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:ApoSplashScreen(String) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:blendOut() "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:actionPerformed(ActionEvent) "/>
                <element name=" Class: org.apogames.help.ApoSplashScreen Method:drawImage(float) "/>
                <element name=" Class: org.apogames.image.ApoImage Method:ApoImage() "/>
                <element name=" Class: org.apogames.image.ApoImage Method:getPic(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImage Method:getImage(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:ApoImageFromValue() "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:drawString(Graphics2D,String,int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getImageFromPath(String,boolean) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getAndMakeIBackground(int,int) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getButtonWithImage(int,int,BufferedImage,Color,Color,Color,Color) "/>
                <element name=" Class: org.apogames.image.ApoImageFromValue Method:getImageCopy(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getScale() "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:setScale(int) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getDoubleScaledImage(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoImageScale Method:getTrippleScaledImage(BufferedImage) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:ApoRawScale2x(int[],int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:different(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:setDestPixel(int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:getSourcePixel(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:process(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale2x Method:getScaledData() "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:ApoRawScale3x(int[],int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:different(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:setDestPixel(int,int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:getSourcePixel(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:process(int,int) "/>
                <element name=" Class: org.apogames.image.ApoRawScale3x Method:getScaledData() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:ApoKeyboard() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:isPressed(int) "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:getReleased() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:getPressed() "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:keyPressed(KeyEvent) "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:keyReleased(KeyEvent) "/>
                <element name=" Class: org.apogames.input.ApoKeyboard Method:keyTyped(KeyEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:ApoMouse() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:getX() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:getY() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:isDragged() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:getReleased() "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:hasClicked(int) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mousePressed(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mouseReleased(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mouseMoved(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:mouseDragged(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:updateCoord(MouseEvent) "/>
                <element name=" Class: org.apogames.input.ApoMouse Method:isMoved() "/>
            </content>
        </node>
    </BlockUniqueAnalyse>
    <ArtefactAnalyse>
        <node name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoBot" unique_percent="-3.219646771412954E-15"/>
        <node name="ApoMarc" unique_percent="28.21316614420062"/>
        <node name="ApoIcarus" unique_percent="48.94837476099426"/>
        <node name="Jacob_Krueger-apogamessrc-7b8c7973b595%2FJava%2FApoCommando" unique_percent="-1.6986412276764895E-14"/>
    </ArtefactAnalyse>
</Stats>
